// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BMSMessage.proto

#include "BMSMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_BMSMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BMSMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BmsMessage_alarmMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_BMSMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BmsMessage_statusMessage;
}  // namespace protobuf_BMSMessage_2eproto
class BmsMessage_statusMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BmsMessage_statusMessage>
      _instance;
} _BmsMessage_statusMessage_default_instance_;
class BmsMessage_alarmMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BmsMessage_alarmMessage>
      _instance;
} _BmsMessage_alarmMessage_default_instance_;
class BmsMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BmsMessage>
      _instance;
} _BmsMessage_default_instance_;
namespace protobuf_BMSMessage_2eproto {
static void InitDefaultsBmsMessage_statusMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_BmsMessage_statusMessage_default_instance_;
    new (ptr) ::BmsMessage_statusMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BmsMessage_statusMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BmsMessage_statusMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBmsMessage_statusMessage}, {}};

static void InitDefaultsBmsMessage_alarmMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_BmsMessage_alarmMessage_default_instance_;
    new (ptr) ::BmsMessage_alarmMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BmsMessage_alarmMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BmsMessage_alarmMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBmsMessage_alarmMessage}, {}};

static void InitDefaultsBmsMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_BmsMessage_default_instance_;
    new (ptr) ::BmsMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BmsMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BmsMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBmsMessage}, {
      &protobuf_BMSMessage_2eproto::scc_info_BmsMessage_statusMessage.base,
      &protobuf_BMSMessage_2eproto::scc_info_BmsMessage_alarmMessage.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BmsMessage_statusMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BmsMessage_alarmMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BmsMessage.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_statusMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_statusMessage, bms_status_charge_touch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_statusMessage, bms_status_charge_connect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_statusMessage, bms_status_emergency_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_statusMessage, bms_status_switch_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_statusMessage, bms_status_motor24_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_statusMessage, bms_status_sys24_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_statusMessage, bms_status_heat_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_statusMessage, bms_status_fan_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_alarmMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_alarmMessage, bms_error_voltage_alarm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_alarmMessage, bms_error_voltage_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_alarmMessage, bms_error_current_alarm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_alarmMessage, bms_error_current_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_alarmMessage, bms_error_temperature_alarm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_alarmMessage, bms_error_temperature_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_alarmMessage, bms_error_soc_alarm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage_alarmMessage, bms_error_soc_error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage, stat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage, bms_soc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage, bms_full_soc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage, bms_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage, bms_sys_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage, bms_motor_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage, bms_charg_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage, bms_board_temp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage, bms_battery_tempa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage, bms_battery_tempb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage, statusmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BmsMessage, alarmmsg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::BmsMessage_statusMessage)},
  { 13, -1, sizeof(::BmsMessage_alarmMessage)},
  { 26, -1, sizeof(::BmsMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BmsMessage_statusMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BmsMessage_alarmMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BmsMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "BMSMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020BMSMessage.proto\"\206\007\n\nBmsMessage\022\014\n\004Sta"
      "t\030\001 \001(\005\022\017\n\007BMS_SOC\030\002 \001(\005\022\024\n\014BMS_FULL_SOC"
      "\030\003 \001(\005\022\023\n\013BMS_Voltage\030\004 \001(\002\022\027\n\017BMS_sys_C"
      "urrent\030\005 \001(\002\022\031\n\021BMS_motor_Current\030\006 \001(\002\022"
      "\031\n\021BMS_charg_Current\030\007 \001(\002\022\026\n\016BMS_board_"
      "temp\030\010 \001(\005\022\031\n\021BMS_battery_tempA\030\t \001(\005\022\031\n"
      "\021BMS_battery_tempB\030\n \001(\005\022,\n\tstatusMsg\030\013 "
      "\001(\0132\031.BmsMessage.statusMessage\022*\n\010alarmM"
      "sg\030\014 \001(\0132\030.BmsMessage.alarmMessage\032\235\002\n\rs"
      "tatusMessage\022\037\n\027BMS_status_Charge_Touch\030"
      "\001 \001(\010\022!\n\031BMS_status_Charge_Connect\030\002 \001(\010"
      "\022#\n\033BMS_status_Emergency_Status\030\003 \001(\010\022 \n"
      "\030BMS_status_Switch_Status\030\004 \001(\010\022!\n\031BMS_s"
      "tatus_Motor24_Status\030\005 \001(\010\022\037\n\027BMS_status"
      "_SYS24_Status\030\006 \001(\010\022\036\n\026BMS_status_Heat_S"
      "tatus\030\007 \001(\010\022\035\n\025BMS_status_Fan_Status\030\010 \001"
      "(\010\032\226\002\n\014alarmMessage\022\037\n\027BMS_error_Voltage"
      "_Alarm\030\001 \001(\010\022\037\n\027BMS_error_Voltage_Error\030"
      "\002 \001(\010\022\037\n\027BMS_error_Current_Alarm\030\003 \001(\010\022\037"
      "\n\027BMS_error_Current_Error\030\004 \001(\010\022#\n\033BMS_e"
      "rror_Temperature_Alarm\030\005 \001(\010\022#\n\033BMS_erro"
      "r_Temperature_Error\030\006 \001(\010\022\033\n\023BMS_error_S"
      "OC_Alarm\030\007 \001(\010\022\033\n\023BMS_error_SOC_Error\030\010 "
      "\001(\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 931);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BMSMessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_BMSMessage_2eproto

// ===================================================================

void BmsMessage_statusMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BmsMessage_statusMessage::kBMSStatusChargeTouchFieldNumber;
const int BmsMessage_statusMessage::kBMSStatusChargeConnectFieldNumber;
const int BmsMessage_statusMessage::kBMSStatusEmergencyStatusFieldNumber;
const int BmsMessage_statusMessage::kBMSStatusSwitchStatusFieldNumber;
const int BmsMessage_statusMessage::kBMSStatusMotor24StatusFieldNumber;
const int BmsMessage_statusMessage::kBMSStatusSYS24StatusFieldNumber;
const int BmsMessage_statusMessage::kBMSStatusHeatStatusFieldNumber;
const int BmsMessage_statusMessage::kBMSStatusFanStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BmsMessage_statusMessage::BmsMessage_statusMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_BMSMessage_2eproto::scc_info_BmsMessage_statusMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BmsMessage.statusMessage)
}
BmsMessage_statusMessage::BmsMessage_statusMessage(const BmsMessage_statusMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bms_status_charge_touch_, &from.bms_status_charge_touch_,
    static_cast<size_t>(reinterpret_cast<char*>(&bms_status_fan_status_) -
    reinterpret_cast<char*>(&bms_status_charge_touch_)) + sizeof(bms_status_fan_status_));
  // @@protoc_insertion_point(copy_constructor:BmsMessage.statusMessage)
}

void BmsMessage_statusMessage::SharedCtor() {
  ::memset(&bms_status_charge_touch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bms_status_fan_status_) -
      reinterpret_cast<char*>(&bms_status_charge_touch_)) + sizeof(bms_status_fan_status_));
}

BmsMessage_statusMessage::~BmsMessage_statusMessage() {
  // @@protoc_insertion_point(destructor:BmsMessage.statusMessage)
  SharedDtor();
}

void BmsMessage_statusMessage::SharedDtor() {
}

void BmsMessage_statusMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BmsMessage_statusMessage::descriptor() {
  ::protobuf_BMSMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BMSMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BmsMessage_statusMessage& BmsMessage_statusMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_BMSMessage_2eproto::scc_info_BmsMessage_statusMessage.base);
  return *internal_default_instance();
}


void BmsMessage_statusMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:BmsMessage.statusMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bms_status_charge_touch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bms_status_fan_status_) -
      reinterpret_cast<char*>(&bms_status_charge_touch_)) + sizeof(bms_status_fan_status_));
  _internal_metadata_.Clear();
}

bool BmsMessage_statusMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BmsMessage.statusMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool BMS_status_Charge_Touch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_status_charge_touch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMS_status_Charge_Connect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_status_charge_connect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMS_status_Emergency_Status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_status_emergency_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMS_status_Switch_Status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_status_switch_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMS_status_Motor24_Status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_status_motor24_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMS_status_SYS24_Status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_status_sys24_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMS_status_Heat_Status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_status_heat_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMS_status_Fan_Status = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_status_fan_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BmsMessage.statusMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BmsMessage.statusMessage)
  return false;
#undef DO_
}

void BmsMessage_statusMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BmsMessage.statusMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool BMS_status_Charge_Touch = 1;
  if (this->bms_status_charge_touch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bms_status_charge_touch(), output);
  }

  // bool BMS_status_Charge_Connect = 2;
  if (this->bms_status_charge_connect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bms_status_charge_connect(), output);
  }

  // bool BMS_status_Emergency_Status = 3;
  if (this->bms_status_emergency_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bms_status_emergency_status(), output);
  }

  // bool BMS_status_Switch_Status = 4;
  if (this->bms_status_switch_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bms_status_switch_status(), output);
  }

  // bool BMS_status_Motor24_Status = 5;
  if (this->bms_status_motor24_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->bms_status_motor24_status(), output);
  }

  // bool BMS_status_SYS24_Status = 6;
  if (this->bms_status_sys24_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->bms_status_sys24_status(), output);
  }

  // bool BMS_status_Heat_Status = 7;
  if (this->bms_status_heat_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->bms_status_heat_status(), output);
  }

  // bool BMS_status_Fan_Status = 8;
  if (this->bms_status_fan_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->bms_status_fan_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BmsMessage.statusMessage)
}

::google::protobuf::uint8* BmsMessage_statusMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BmsMessage.statusMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool BMS_status_Charge_Touch = 1;
  if (this->bms_status_charge_touch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bms_status_charge_touch(), target);
  }

  // bool BMS_status_Charge_Connect = 2;
  if (this->bms_status_charge_connect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bms_status_charge_connect(), target);
  }

  // bool BMS_status_Emergency_Status = 3;
  if (this->bms_status_emergency_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->bms_status_emergency_status(), target);
  }

  // bool BMS_status_Switch_Status = 4;
  if (this->bms_status_switch_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bms_status_switch_status(), target);
  }

  // bool BMS_status_Motor24_Status = 5;
  if (this->bms_status_motor24_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->bms_status_motor24_status(), target);
  }

  // bool BMS_status_SYS24_Status = 6;
  if (this->bms_status_sys24_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->bms_status_sys24_status(), target);
  }

  // bool BMS_status_Heat_Status = 7;
  if (this->bms_status_heat_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->bms_status_heat_status(), target);
  }

  // bool BMS_status_Fan_Status = 8;
  if (this->bms_status_fan_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->bms_status_fan_status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BmsMessage.statusMessage)
  return target;
}

size_t BmsMessage_statusMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BmsMessage.statusMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool BMS_status_Charge_Touch = 1;
  if (this->bms_status_charge_touch() != 0) {
    total_size += 1 + 1;
  }

  // bool BMS_status_Charge_Connect = 2;
  if (this->bms_status_charge_connect() != 0) {
    total_size += 1 + 1;
  }

  // bool BMS_status_Emergency_Status = 3;
  if (this->bms_status_emergency_status() != 0) {
    total_size += 1 + 1;
  }

  // bool BMS_status_Switch_Status = 4;
  if (this->bms_status_switch_status() != 0) {
    total_size += 1 + 1;
  }

  // bool BMS_status_Motor24_Status = 5;
  if (this->bms_status_motor24_status() != 0) {
    total_size += 1 + 1;
  }

  // bool BMS_status_SYS24_Status = 6;
  if (this->bms_status_sys24_status() != 0) {
    total_size += 1 + 1;
  }

  // bool BMS_status_Heat_Status = 7;
  if (this->bms_status_heat_status() != 0) {
    total_size += 1 + 1;
  }

  // bool BMS_status_Fan_Status = 8;
  if (this->bms_status_fan_status() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BmsMessage_statusMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BmsMessage.statusMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BmsMessage_statusMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BmsMessage_statusMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BmsMessage.statusMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BmsMessage.statusMessage)
    MergeFrom(*source);
  }
}

void BmsMessage_statusMessage::MergeFrom(const BmsMessage_statusMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BmsMessage.statusMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bms_status_charge_touch() != 0) {
    set_bms_status_charge_touch(from.bms_status_charge_touch());
  }
  if (from.bms_status_charge_connect() != 0) {
    set_bms_status_charge_connect(from.bms_status_charge_connect());
  }
  if (from.bms_status_emergency_status() != 0) {
    set_bms_status_emergency_status(from.bms_status_emergency_status());
  }
  if (from.bms_status_switch_status() != 0) {
    set_bms_status_switch_status(from.bms_status_switch_status());
  }
  if (from.bms_status_motor24_status() != 0) {
    set_bms_status_motor24_status(from.bms_status_motor24_status());
  }
  if (from.bms_status_sys24_status() != 0) {
    set_bms_status_sys24_status(from.bms_status_sys24_status());
  }
  if (from.bms_status_heat_status() != 0) {
    set_bms_status_heat_status(from.bms_status_heat_status());
  }
  if (from.bms_status_fan_status() != 0) {
    set_bms_status_fan_status(from.bms_status_fan_status());
  }
}

void BmsMessage_statusMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BmsMessage.statusMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmsMessage_statusMessage::CopyFrom(const BmsMessage_statusMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BmsMessage.statusMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmsMessage_statusMessage::IsInitialized() const {
  return true;
}

void BmsMessage_statusMessage::Swap(BmsMessage_statusMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BmsMessage_statusMessage::InternalSwap(BmsMessage_statusMessage* other) {
  using std::swap;
  swap(bms_status_charge_touch_, other->bms_status_charge_touch_);
  swap(bms_status_charge_connect_, other->bms_status_charge_connect_);
  swap(bms_status_emergency_status_, other->bms_status_emergency_status_);
  swap(bms_status_switch_status_, other->bms_status_switch_status_);
  swap(bms_status_motor24_status_, other->bms_status_motor24_status_);
  swap(bms_status_sys24_status_, other->bms_status_sys24_status_);
  swap(bms_status_heat_status_, other->bms_status_heat_status_);
  swap(bms_status_fan_status_, other->bms_status_fan_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BmsMessage_statusMessage::GetMetadata() const {
  protobuf_BMSMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BMSMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BmsMessage_alarmMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BmsMessage_alarmMessage::kBMSErrorVoltageAlarmFieldNumber;
const int BmsMessage_alarmMessage::kBMSErrorVoltageErrorFieldNumber;
const int BmsMessage_alarmMessage::kBMSErrorCurrentAlarmFieldNumber;
const int BmsMessage_alarmMessage::kBMSErrorCurrentErrorFieldNumber;
const int BmsMessage_alarmMessage::kBMSErrorTemperatureAlarmFieldNumber;
const int BmsMessage_alarmMessage::kBMSErrorTemperatureErrorFieldNumber;
const int BmsMessage_alarmMessage::kBMSErrorSOCAlarmFieldNumber;
const int BmsMessage_alarmMessage::kBMSErrorSOCErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BmsMessage_alarmMessage::BmsMessage_alarmMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_BMSMessage_2eproto::scc_info_BmsMessage_alarmMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BmsMessage.alarmMessage)
}
BmsMessage_alarmMessage::BmsMessage_alarmMessage(const BmsMessage_alarmMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bms_error_voltage_alarm_, &from.bms_error_voltage_alarm_,
    static_cast<size_t>(reinterpret_cast<char*>(&bms_error_soc_error_) -
    reinterpret_cast<char*>(&bms_error_voltage_alarm_)) + sizeof(bms_error_soc_error_));
  // @@protoc_insertion_point(copy_constructor:BmsMessage.alarmMessage)
}

void BmsMessage_alarmMessage::SharedCtor() {
  ::memset(&bms_error_voltage_alarm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bms_error_soc_error_) -
      reinterpret_cast<char*>(&bms_error_voltage_alarm_)) + sizeof(bms_error_soc_error_));
}

BmsMessage_alarmMessage::~BmsMessage_alarmMessage() {
  // @@protoc_insertion_point(destructor:BmsMessage.alarmMessage)
  SharedDtor();
}

void BmsMessage_alarmMessage::SharedDtor() {
}

void BmsMessage_alarmMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BmsMessage_alarmMessage::descriptor() {
  ::protobuf_BMSMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BMSMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BmsMessage_alarmMessage& BmsMessage_alarmMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_BMSMessage_2eproto::scc_info_BmsMessage_alarmMessage.base);
  return *internal_default_instance();
}


void BmsMessage_alarmMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:BmsMessage.alarmMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bms_error_voltage_alarm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bms_error_soc_error_) -
      reinterpret_cast<char*>(&bms_error_voltage_alarm_)) + sizeof(bms_error_soc_error_));
  _internal_metadata_.Clear();
}

bool BmsMessage_alarmMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BmsMessage.alarmMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool BMS_error_Voltage_Alarm = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_error_voltage_alarm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMS_error_Voltage_Error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_error_voltage_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMS_error_Current_Alarm = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_error_current_alarm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMS_error_Current_Error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_error_current_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMS_error_Temperature_Alarm = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_error_temperature_alarm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMS_error_Temperature_Error = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_error_temperature_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMS_error_SOC_Alarm = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_error_soc_alarm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMS_error_SOC_Error = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bms_error_soc_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BmsMessage.alarmMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BmsMessage.alarmMessage)
  return false;
#undef DO_
}

void BmsMessage_alarmMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BmsMessage.alarmMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool BMS_error_Voltage_Alarm = 1;
  if (this->bms_error_voltage_alarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bms_error_voltage_alarm(), output);
  }

  // bool BMS_error_Voltage_Error = 2;
  if (this->bms_error_voltage_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bms_error_voltage_error(), output);
  }

  // bool BMS_error_Current_Alarm = 3;
  if (this->bms_error_current_alarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bms_error_current_alarm(), output);
  }

  // bool BMS_error_Current_Error = 4;
  if (this->bms_error_current_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bms_error_current_error(), output);
  }

  // bool BMS_error_Temperature_Alarm = 5;
  if (this->bms_error_temperature_alarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->bms_error_temperature_alarm(), output);
  }

  // bool BMS_error_Temperature_Error = 6;
  if (this->bms_error_temperature_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->bms_error_temperature_error(), output);
  }

  // bool BMS_error_SOC_Alarm = 7;
  if (this->bms_error_soc_alarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->bms_error_soc_alarm(), output);
  }

  // bool BMS_error_SOC_Error = 8;
  if (this->bms_error_soc_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->bms_error_soc_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BmsMessage.alarmMessage)
}

::google::protobuf::uint8* BmsMessage_alarmMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BmsMessage.alarmMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool BMS_error_Voltage_Alarm = 1;
  if (this->bms_error_voltage_alarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bms_error_voltage_alarm(), target);
  }

  // bool BMS_error_Voltage_Error = 2;
  if (this->bms_error_voltage_error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bms_error_voltage_error(), target);
  }

  // bool BMS_error_Current_Alarm = 3;
  if (this->bms_error_current_alarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->bms_error_current_alarm(), target);
  }

  // bool BMS_error_Current_Error = 4;
  if (this->bms_error_current_error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bms_error_current_error(), target);
  }

  // bool BMS_error_Temperature_Alarm = 5;
  if (this->bms_error_temperature_alarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->bms_error_temperature_alarm(), target);
  }

  // bool BMS_error_Temperature_Error = 6;
  if (this->bms_error_temperature_error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->bms_error_temperature_error(), target);
  }

  // bool BMS_error_SOC_Alarm = 7;
  if (this->bms_error_soc_alarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->bms_error_soc_alarm(), target);
  }

  // bool BMS_error_SOC_Error = 8;
  if (this->bms_error_soc_error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->bms_error_soc_error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BmsMessage.alarmMessage)
  return target;
}

size_t BmsMessage_alarmMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BmsMessage.alarmMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool BMS_error_Voltage_Alarm = 1;
  if (this->bms_error_voltage_alarm() != 0) {
    total_size += 1 + 1;
  }

  // bool BMS_error_Voltage_Error = 2;
  if (this->bms_error_voltage_error() != 0) {
    total_size += 1 + 1;
  }

  // bool BMS_error_Current_Alarm = 3;
  if (this->bms_error_current_alarm() != 0) {
    total_size += 1 + 1;
  }

  // bool BMS_error_Current_Error = 4;
  if (this->bms_error_current_error() != 0) {
    total_size += 1 + 1;
  }

  // bool BMS_error_Temperature_Alarm = 5;
  if (this->bms_error_temperature_alarm() != 0) {
    total_size += 1 + 1;
  }

  // bool BMS_error_Temperature_Error = 6;
  if (this->bms_error_temperature_error() != 0) {
    total_size += 1 + 1;
  }

  // bool BMS_error_SOC_Alarm = 7;
  if (this->bms_error_soc_alarm() != 0) {
    total_size += 1 + 1;
  }

  // bool BMS_error_SOC_Error = 8;
  if (this->bms_error_soc_error() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BmsMessage_alarmMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BmsMessage.alarmMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BmsMessage_alarmMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BmsMessage_alarmMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BmsMessage.alarmMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BmsMessage.alarmMessage)
    MergeFrom(*source);
  }
}

void BmsMessage_alarmMessage::MergeFrom(const BmsMessage_alarmMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BmsMessage.alarmMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bms_error_voltage_alarm() != 0) {
    set_bms_error_voltage_alarm(from.bms_error_voltage_alarm());
  }
  if (from.bms_error_voltage_error() != 0) {
    set_bms_error_voltage_error(from.bms_error_voltage_error());
  }
  if (from.bms_error_current_alarm() != 0) {
    set_bms_error_current_alarm(from.bms_error_current_alarm());
  }
  if (from.bms_error_current_error() != 0) {
    set_bms_error_current_error(from.bms_error_current_error());
  }
  if (from.bms_error_temperature_alarm() != 0) {
    set_bms_error_temperature_alarm(from.bms_error_temperature_alarm());
  }
  if (from.bms_error_temperature_error() != 0) {
    set_bms_error_temperature_error(from.bms_error_temperature_error());
  }
  if (from.bms_error_soc_alarm() != 0) {
    set_bms_error_soc_alarm(from.bms_error_soc_alarm());
  }
  if (from.bms_error_soc_error() != 0) {
    set_bms_error_soc_error(from.bms_error_soc_error());
  }
}

void BmsMessage_alarmMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BmsMessage.alarmMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmsMessage_alarmMessage::CopyFrom(const BmsMessage_alarmMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BmsMessage.alarmMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmsMessage_alarmMessage::IsInitialized() const {
  return true;
}

void BmsMessage_alarmMessage::Swap(BmsMessage_alarmMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BmsMessage_alarmMessage::InternalSwap(BmsMessage_alarmMessage* other) {
  using std::swap;
  swap(bms_error_voltage_alarm_, other->bms_error_voltage_alarm_);
  swap(bms_error_voltage_error_, other->bms_error_voltage_error_);
  swap(bms_error_current_alarm_, other->bms_error_current_alarm_);
  swap(bms_error_current_error_, other->bms_error_current_error_);
  swap(bms_error_temperature_alarm_, other->bms_error_temperature_alarm_);
  swap(bms_error_temperature_error_, other->bms_error_temperature_error_);
  swap(bms_error_soc_alarm_, other->bms_error_soc_alarm_);
  swap(bms_error_soc_error_, other->bms_error_soc_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BmsMessage_alarmMessage::GetMetadata() const {
  protobuf_BMSMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BMSMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BmsMessage::InitAsDefaultInstance() {
  ::_BmsMessage_default_instance_._instance.get_mutable()->statusmsg_ = const_cast< ::BmsMessage_statusMessage*>(
      ::BmsMessage_statusMessage::internal_default_instance());
  ::_BmsMessage_default_instance_._instance.get_mutable()->alarmmsg_ = const_cast< ::BmsMessage_alarmMessage*>(
      ::BmsMessage_alarmMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BmsMessage::kStatFieldNumber;
const int BmsMessage::kBMSSOCFieldNumber;
const int BmsMessage::kBMSFULLSOCFieldNumber;
const int BmsMessage::kBMSVoltageFieldNumber;
const int BmsMessage::kBMSSysCurrentFieldNumber;
const int BmsMessage::kBMSMotorCurrentFieldNumber;
const int BmsMessage::kBMSChargCurrentFieldNumber;
const int BmsMessage::kBMSBoardTempFieldNumber;
const int BmsMessage::kBMSBatteryTempAFieldNumber;
const int BmsMessage::kBMSBatteryTempBFieldNumber;
const int BmsMessage::kStatusMsgFieldNumber;
const int BmsMessage::kAlarmMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BmsMessage::BmsMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_BMSMessage_2eproto::scc_info_BmsMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BmsMessage)
}
BmsMessage::BmsMessage(const BmsMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_statusmsg()) {
    statusmsg_ = new ::BmsMessage_statusMessage(*from.statusmsg_);
  } else {
    statusmsg_ = NULL;
  }
  if (from.has_alarmmsg()) {
    alarmmsg_ = new ::BmsMessage_alarmMessage(*from.alarmmsg_);
  } else {
    alarmmsg_ = NULL;
  }
  ::memcpy(&stat_, &from.stat_,
    static_cast<size_t>(reinterpret_cast<char*>(&bms_battery_tempb_) -
    reinterpret_cast<char*>(&stat_)) + sizeof(bms_battery_tempb_));
  // @@protoc_insertion_point(copy_constructor:BmsMessage)
}

void BmsMessage::SharedCtor() {
  ::memset(&statusmsg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bms_battery_tempb_) -
      reinterpret_cast<char*>(&statusmsg_)) + sizeof(bms_battery_tempb_));
}

BmsMessage::~BmsMessage() {
  // @@protoc_insertion_point(destructor:BmsMessage)
  SharedDtor();
}

void BmsMessage::SharedDtor() {
  if (this != internal_default_instance()) delete statusmsg_;
  if (this != internal_default_instance()) delete alarmmsg_;
}

void BmsMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BmsMessage::descriptor() {
  ::protobuf_BMSMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BMSMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BmsMessage& BmsMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_BMSMessage_2eproto::scc_info_BmsMessage.base);
  return *internal_default_instance();
}


void BmsMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:BmsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && statusmsg_ != NULL) {
    delete statusmsg_;
  }
  statusmsg_ = NULL;
  if (GetArenaNoVirtual() == NULL && alarmmsg_ != NULL) {
    delete alarmmsg_;
  }
  alarmmsg_ = NULL;
  ::memset(&stat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bms_battery_tempb_) -
      reinterpret_cast<char*>(&stat_)) + sizeof(bms_battery_tempb_));
  _internal_metadata_.Clear();
}

bool BmsMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BmsMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Stat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BMS_SOC = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bms_soc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BMS_FULL_SOC = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bms_full_soc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BMS_Voltage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bms_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BMS_sys_Current = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bms_sys_current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BMS_motor_Current = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bms_motor_current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float BMS_charg_Current = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bms_charg_current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BMS_board_temp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bms_board_temp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BMS_battery_tempA = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bms_battery_tempa_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BMS_battery_tempB = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bms_battery_tempb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BmsMessage.statusMessage statusMsg = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statusmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BmsMessage.alarmMessage alarmMsg = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alarmmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BmsMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BmsMessage)
  return false;
#undef DO_
}

void BmsMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BmsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Stat = 1;
  if (this->stat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stat(), output);
  }

  // int32 BMS_SOC = 2;
  if (this->bms_soc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bms_soc(), output);
  }

  // int32 BMS_FULL_SOC = 3;
  if (this->bms_full_soc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bms_full_soc(), output);
  }

  // float BMS_Voltage = 4;
  if (this->bms_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->bms_voltage(), output);
  }

  // float BMS_sys_Current = 5;
  if (this->bms_sys_current() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->bms_sys_current(), output);
  }

  // float BMS_motor_Current = 6;
  if (this->bms_motor_current() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->bms_motor_current(), output);
  }

  // float BMS_charg_Current = 7;
  if (this->bms_charg_current() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->bms_charg_current(), output);
  }

  // int32 BMS_board_temp = 8;
  if (this->bms_board_temp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->bms_board_temp(), output);
  }

  // int32 BMS_battery_tempA = 9;
  if (this->bms_battery_tempa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->bms_battery_tempa(), output);
  }

  // int32 BMS_battery_tempB = 10;
  if (this->bms_battery_tempb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->bms_battery_tempb(), output);
  }

  // .BmsMessage.statusMessage statusMsg = 11;
  if (this->has_statusmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_statusmsg(), output);
  }

  // .BmsMessage.alarmMessage alarmMsg = 12;
  if (this->has_alarmmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_alarmmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BmsMessage)
}

::google::protobuf::uint8* BmsMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BmsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Stat = 1;
  if (this->stat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stat(), target);
  }

  // int32 BMS_SOC = 2;
  if (this->bms_soc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bms_soc(), target);
  }

  // int32 BMS_FULL_SOC = 3;
  if (this->bms_full_soc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bms_full_soc(), target);
  }

  // float BMS_Voltage = 4;
  if (this->bms_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->bms_voltage(), target);
  }

  // float BMS_sys_Current = 5;
  if (this->bms_sys_current() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->bms_sys_current(), target);
  }

  // float BMS_motor_Current = 6;
  if (this->bms_motor_current() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->bms_motor_current(), target);
  }

  // float BMS_charg_Current = 7;
  if (this->bms_charg_current() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->bms_charg_current(), target);
  }

  // int32 BMS_board_temp = 8;
  if (this->bms_board_temp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->bms_board_temp(), target);
  }

  // int32 BMS_battery_tempA = 9;
  if (this->bms_battery_tempa() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->bms_battery_tempa(), target);
  }

  // int32 BMS_battery_tempB = 10;
  if (this->bms_battery_tempb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->bms_battery_tempb(), target);
  }

  // .BmsMessage.statusMessage statusMsg = 11;
  if (this->has_statusmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_statusmsg(), deterministic, target);
  }

  // .BmsMessage.alarmMessage alarmMsg = 12;
  if (this->has_alarmmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_alarmmsg(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BmsMessage)
  return target;
}

size_t BmsMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BmsMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .BmsMessage.statusMessage statusMsg = 11;
  if (this->has_statusmsg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *statusmsg_);
  }

  // .BmsMessage.alarmMessage alarmMsg = 12;
  if (this->has_alarmmsg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *alarmmsg_);
  }

  // int32 Stat = 1;
  if (this->stat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stat());
  }

  // int32 BMS_SOC = 2;
  if (this->bms_soc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bms_soc());
  }

  // int32 BMS_FULL_SOC = 3;
  if (this->bms_full_soc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bms_full_soc());
  }

  // float BMS_Voltage = 4;
  if (this->bms_voltage() != 0) {
    total_size += 1 + 4;
  }

  // float BMS_sys_Current = 5;
  if (this->bms_sys_current() != 0) {
    total_size += 1 + 4;
  }

  // float BMS_motor_Current = 6;
  if (this->bms_motor_current() != 0) {
    total_size += 1 + 4;
  }

  // float BMS_charg_Current = 7;
  if (this->bms_charg_current() != 0) {
    total_size += 1 + 4;
  }

  // int32 BMS_board_temp = 8;
  if (this->bms_board_temp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bms_board_temp());
  }

  // int32 BMS_battery_tempA = 9;
  if (this->bms_battery_tempa() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bms_battery_tempa());
  }

  // int32 BMS_battery_tempB = 10;
  if (this->bms_battery_tempb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bms_battery_tempb());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BmsMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BmsMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BmsMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BmsMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BmsMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BmsMessage)
    MergeFrom(*source);
  }
}

void BmsMessage::MergeFrom(const BmsMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BmsMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_statusmsg()) {
    mutable_statusmsg()->::BmsMessage_statusMessage::MergeFrom(from.statusmsg());
  }
  if (from.has_alarmmsg()) {
    mutable_alarmmsg()->::BmsMessage_alarmMessage::MergeFrom(from.alarmmsg());
  }
  if (from.stat() != 0) {
    set_stat(from.stat());
  }
  if (from.bms_soc() != 0) {
    set_bms_soc(from.bms_soc());
  }
  if (from.bms_full_soc() != 0) {
    set_bms_full_soc(from.bms_full_soc());
  }
  if (from.bms_voltage() != 0) {
    set_bms_voltage(from.bms_voltage());
  }
  if (from.bms_sys_current() != 0) {
    set_bms_sys_current(from.bms_sys_current());
  }
  if (from.bms_motor_current() != 0) {
    set_bms_motor_current(from.bms_motor_current());
  }
  if (from.bms_charg_current() != 0) {
    set_bms_charg_current(from.bms_charg_current());
  }
  if (from.bms_board_temp() != 0) {
    set_bms_board_temp(from.bms_board_temp());
  }
  if (from.bms_battery_tempa() != 0) {
    set_bms_battery_tempa(from.bms_battery_tempa());
  }
  if (from.bms_battery_tempb() != 0) {
    set_bms_battery_tempb(from.bms_battery_tempb());
  }
}

void BmsMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BmsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmsMessage::CopyFrom(const BmsMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BmsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmsMessage::IsInitialized() const {
  return true;
}

void BmsMessage::Swap(BmsMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BmsMessage::InternalSwap(BmsMessage* other) {
  using std::swap;
  swap(statusmsg_, other->statusmsg_);
  swap(alarmmsg_, other->alarmmsg_);
  swap(stat_, other->stat_);
  swap(bms_soc_, other->bms_soc_);
  swap(bms_full_soc_, other->bms_full_soc_);
  swap(bms_voltage_, other->bms_voltage_);
  swap(bms_sys_current_, other->bms_sys_current_);
  swap(bms_motor_current_, other->bms_motor_current_);
  swap(bms_charg_current_, other->bms_charg_current_);
  swap(bms_board_temp_, other->bms_board_temp_);
  swap(bms_battery_tempa_, other->bms_battery_tempa_);
  swap(bms_battery_tempb_, other->bms_battery_tempb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BmsMessage::GetMetadata() const {
  protobuf_BMSMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BMSMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BmsMessage_statusMessage* Arena::CreateMaybeMessage< ::BmsMessage_statusMessage >(Arena* arena) {
  return Arena::CreateInternal< ::BmsMessage_statusMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BmsMessage_alarmMessage* Arena::CreateMaybeMessage< ::BmsMessage_alarmMessage >(Arena* arena) {
  return Arena::CreateInternal< ::BmsMessage_alarmMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BmsMessage* Arena::CreateMaybeMessage< ::BmsMessage >(Arena* arena) {
  return Arena::CreateInternal< ::BmsMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
