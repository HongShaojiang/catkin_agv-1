// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ParamConfig.proto

#include "ParamConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ExternSensorConfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ExternSensorConfig_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ExternSensorConfig;
}  // namespace protobuf_ExternSensorConfig_2eproto
namespace protobuf_ParamConfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ParamConfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ParamConfig_Config_Alarm_Mode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ParamConfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ParamConfig_Config_Error_Mode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ParamConfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ParamConfig_Config_Mode_Driver;
}  // namespace protobuf_ParamConfig_2eproto
class ParamConfig_Config_Mode_DriverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParamConfig_Config_Mode_Driver>
      _instance;
} _ParamConfig_Config_Mode_Driver_default_instance_;
class ParamConfig_Config_Error_ModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParamConfig_Config_Error_Mode>
      _instance;
} _ParamConfig_Config_Error_Mode_default_instance_;
class ParamConfig_Config_Alarm_ModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParamConfig_Config_Alarm_Mode>
      _instance;
} _ParamConfig_Config_Alarm_Mode_default_instance_;
class ParamConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParamConfig>
      _instance;
} _ParamConfig_default_instance_;
namespace protobuf_ParamConfig_2eproto {
static void InitDefaultsParamConfig_Config_Mode_Driver() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ParamConfig_Config_Mode_Driver_default_instance_;
    new (ptr) ::ParamConfig_Config_Mode_Driver();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ParamConfig_Config_Mode_Driver::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ParamConfig_Config_Mode_Driver =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParamConfig_Config_Mode_Driver}, {}};

static void InitDefaultsParamConfig_Config_Error_Mode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ParamConfig_Config_Error_Mode_default_instance_;
    new (ptr) ::ParamConfig_Config_Error_Mode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ParamConfig_Config_Error_Mode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ParamConfig_Config_Error_Mode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParamConfig_Config_Error_Mode}, {}};

static void InitDefaultsParamConfig_Config_Alarm_Mode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ParamConfig_Config_Alarm_Mode_default_instance_;
    new (ptr) ::ParamConfig_Config_Alarm_Mode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ParamConfig_Config_Alarm_Mode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ParamConfig_Config_Alarm_Mode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParamConfig_Config_Alarm_Mode}, {}};

static void InitDefaultsParamConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ParamConfig_default_instance_;
    new (ptr) ::ParamConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ParamConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_ParamConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsParamConfig}, {
      &protobuf_ParamConfig_2eproto::scc_info_ParamConfig_Config_Mode_Driver.base,
      &protobuf_ParamConfig_2eproto::scc_info_ParamConfig_Config_Error_Mode.base,
      &protobuf_ParamConfig_2eproto::scc_info_ParamConfig_Config_Alarm_Mode.base,
      &protobuf_ExternSensorConfig_2eproto::scc_info_ExternSensorConfig.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ParamConfig_Config_Mode_Driver.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParamConfig_Config_Error_Mode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParamConfig_Config_Alarm_Mode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParamConfig.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Mode_Driver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Mode_Driver, autorun_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Mode_Driver, autorun_angel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Mode_Driver, remote_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Mode_Driver, remote_angel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Mode_Driver, remote_accevelocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Mode_Driver, reductionratiol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Mode_Driver, wheelssize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Mode_Driver, rwheelssize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Mode_Driver, lwheelssize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Mode_Driver, ecounterrpm_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Error_Mode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Error_Mode, carleftfdrivererror_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Error_Mode, carrightfdrivererror_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Error_Mode, carleftbdrivererror_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Error_Mode, carrightbdrivererror_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Error_Mode, leftfdrivercomerror_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Error_Mode, rightfdrivercomerror_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Error_Mode, leftbdrivercomerror_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Error_Mode, rightbdrivercomerror_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Error_Mode, externcomdeverror_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Error_Mode, bmssyserror_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Error_Mode, obstaclestoperror_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Error_Mode, cashswitchstoperror_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Error_Mode, currentoverloaderror_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Error_Mode, xrs2015_drivernodeoff_ischeck_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Alarm_Mode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Alarm_Mode, ctrolboxhightemalarm_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Alarm_Mode, ctrolboxfrozentemalarm_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Alarm_Mode, bmsmodcomlostalarm_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Alarm_Mode, emergency_status_stop_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Alarm_Mode, ecanexternsnsorndeoff_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Alarm_Mode, zmqtransnodeoff_ischeck_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig_Config_Alarm_Mode, joytestnodeoff_ischeck_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig, config_driver_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig, config_error_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig, config_alarm_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ParamConfig, config_extern_msg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ParamConfig_Config_Mode_Driver)},
  { 15, -1, sizeof(::ParamConfig_Config_Error_Mode)},
  { 34, -1, sizeof(::ParamConfig_Config_Alarm_Mode)},
  { 46, -1, sizeof(::ParamConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ParamConfig_Config_Mode_Driver_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ParamConfig_Config_Error_Mode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ParamConfig_Config_Alarm_Mode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ParamConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ParamConfig.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021ParamConfig.proto\032\030ExternSensorConfig."
      "proto\"\225\n\n\013ParamConfig\022:\n\021Config_Driver_M"
      "sg\030\001 \001(\0132\037.ParamConfig.Config_Mode_Drive"
      "r\0228\n\020Config_Error_Msg\030\002 \001(\0132\036.ParamConfi"
      "g.Config_Error_Mode\0228\n\020Config_Alarm_Msg\030"
      "\003 \001(\0132\036.ParamConfig.Config_Alarm_Mode\022.\n"
      "\021Config_extern_Msg\030\004 \001(\0132\023.ExternSensorC"
      "onfig\032\367\001\n\022Config_Mode_Driver\022\025\n\rautorun_"
      "speed\030\001 \001(\005\022\025\n\rautorun_angel\030\002 \001(\005\022\024\n\014re"
      "mote_speed\030\003 \001(\005\022\024\n\014remote_angel\030\004 \001(\005\022\033"
      "\n\023remote_AcceVelocity\030\005 \001(\005\022\027\n\017Reduction"
      "Ratiol\030\006 \001(\002\022\022\n\nWheelSsize\030\007 \001(\002\022\023\n\013RWhe"
      "elSsize\030\010 \001(\002\022\023\n\013LWheelSsize\030\t \001(\002\022\023\n\013Ec"
      "ounterRpm\030\n \001(\005\032\224\004\n\021Config_Error_Mode\022#\n"
      "\033CarLeftFDriverError_Ischeck\030\001 \001(\010\022$\n\034Ca"
      "rRightFDriverError_Ischeck\030\002 \001(\010\022#\n\033CarL"
      "eftBDriverError_Ischeck\030\003 \001(\010\022$\n\034CarRigh"
      "tBDriverError_Ischeck\030\004 \001(\010\022#\n\033LeftFDriv"
      "erComError_Ischeck\030\005 \001(\010\022$\n\034RightFDriver"
      "ComError_Ischeck\030\006 \001(\010\022#\n\033LeftBDriverCom"
      "Error_Ischeck\030\007 \001(\010\022$\n\034RightBDriverComEr"
      "ror_Ischeck\030\010 \001(\010\022!\n\031ExternComDevError_I"
      "scheck\030\t \001(\010\022\033\n\023BMSSysError_Ischeck\030\n \001("
      "\010\022!\n\031ObstacleStopError_Ischeck\030\013 \001(\010\022#\n\033"
      "CashSwitchStopError_Ischeck\030\014 \001(\010\022$\n\034Cur"
      "rentOverloadError_Ischeck\030\r \001(\010\022%\n\035xrs20"
      "15_driverNodeOFF_Ischeck\030\016 \001(\010\032\224\002\n\021Confi"
      "g_Alarm_Mode\022$\n\034CtrolBoxHighTemAlarm_Isc"
      "heck\030\001 \001(\010\022&\n\036CtrolBoxFrozenTemAlarm_Isc"
      "heck\030\002 \001(\010\022\"\n\032BMSModComLostAlarm_Ischeck"
      "\030\003 \001(\010\022%\n\035Emergency_Status_stop_Ischeck\030"
      "\004 \001(\010\022%\n\035EcanExternSnsorNdeOFF_Ischeck\030\005"
      " \001(\010\022\037\n\027ZmqTransNodeOFF_Ischeck\030\006 \001(\010\022\036\n"
      "\026JoyTestNodeOFF_Ischeck\030\007 \001(\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1357);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ParamConfig.proto", &protobuf_RegisterTypes);
  ::protobuf_ExternSensorConfig_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ParamConfig_2eproto

// ===================================================================

void ParamConfig_Config_Mode_Driver::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParamConfig_Config_Mode_Driver::kAutorunSpeedFieldNumber;
const int ParamConfig_Config_Mode_Driver::kAutorunAngelFieldNumber;
const int ParamConfig_Config_Mode_Driver::kRemoteSpeedFieldNumber;
const int ParamConfig_Config_Mode_Driver::kRemoteAngelFieldNumber;
const int ParamConfig_Config_Mode_Driver::kRemoteAcceVelocityFieldNumber;
const int ParamConfig_Config_Mode_Driver::kReductionRatiolFieldNumber;
const int ParamConfig_Config_Mode_Driver::kWheelSsizeFieldNumber;
const int ParamConfig_Config_Mode_Driver::kRWheelSsizeFieldNumber;
const int ParamConfig_Config_Mode_Driver::kLWheelSsizeFieldNumber;
const int ParamConfig_Config_Mode_Driver::kEcounterRpmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParamConfig_Config_Mode_Driver::ParamConfig_Config_Mode_Driver()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ParamConfig_2eproto::scc_info_ParamConfig_Config_Mode_Driver.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ParamConfig.Config_Mode_Driver)
}
ParamConfig_Config_Mode_Driver::ParamConfig_Config_Mode_Driver(const ParamConfig_Config_Mode_Driver& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&autorun_speed_, &from.autorun_speed_,
    static_cast<size_t>(reinterpret_cast<char*>(&ecounterrpm_) -
    reinterpret_cast<char*>(&autorun_speed_)) + sizeof(ecounterrpm_));
  // @@protoc_insertion_point(copy_constructor:ParamConfig.Config_Mode_Driver)
}

void ParamConfig_Config_Mode_Driver::SharedCtor() {
  ::memset(&autorun_speed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ecounterrpm_) -
      reinterpret_cast<char*>(&autorun_speed_)) + sizeof(ecounterrpm_));
}

ParamConfig_Config_Mode_Driver::~ParamConfig_Config_Mode_Driver() {
  // @@protoc_insertion_point(destructor:ParamConfig.Config_Mode_Driver)
  SharedDtor();
}

void ParamConfig_Config_Mode_Driver::SharedDtor() {
}

void ParamConfig_Config_Mode_Driver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ParamConfig_Config_Mode_Driver::descriptor() {
  ::protobuf_ParamConfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ParamConfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParamConfig_Config_Mode_Driver& ParamConfig_Config_Mode_Driver::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ParamConfig_2eproto::scc_info_ParamConfig_Config_Mode_Driver.base);
  return *internal_default_instance();
}


void ParamConfig_Config_Mode_Driver::Clear() {
// @@protoc_insertion_point(message_clear_start:ParamConfig.Config_Mode_Driver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&autorun_speed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ecounterrpm_) -
      reinterpret_cast<char*>(&autorun_speed_)) + sizeof(ecounterrpm_));
  _internal_metadata_.Clear();
}

bool ParamConfig_Config_Mode_Driver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ParamConfig.Config_Mode_Driver)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 autorun_speed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &autorun_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 autorun_angel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &autorun_angel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 remote_speed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &remote_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 remote_angel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &remote_angel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 remote_AcceVelocity = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &remote_accevelocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ReductionRatiol = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &reductionratiol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float WheelSsize = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &wheelssize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float RWheelSsize = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rwheelssize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float LWheelSsize = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lwheelssize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 EcounterRpm = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ecounterrpm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ParamConfig.Config_Mode_Driver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ParamConfig.Config_Mode_Driver)
  return false;
#undef DO_
}

void ParamConfig_Config_Mode_Driver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ParamConfig.Config_Mode_Driver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 autorun_speed = 1;
  if (this->autorun_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->autorun_speed(), output);
  }

  // int32 autorun_angel = 2;
  if (this->autorun_angel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->autorun_angel(), output);
  }

  // int32 remote_speed = 3;
  if (this->remote_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->remote_speed(), output);
  }

  // int32 remote_angel = 4;
  if (this->remote_angel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->remote_angel(), output);
  }

  // int32 remote_AcceVelocity = 5;
  if (this->remote_accevelocity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->remote_accevelocity(), output);
  }

  // float ReductionRatiol = 6;
  if (this->reductionratiol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->reductionratiol(), output);
  }

  // float WheelSsize = 7;
  if (this->wheelssize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->wheelssize(), output);
  }

  // float RWheelSsize = 8;
  if (this->rwheelssize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->rwheelssize(), output);
  }

  // float LWheelSsize = 9;
  if (this->lwheelssize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->lwheelssize(), output);
  }

  // int32 EcounterRpm = 10;
  if (this->ecounterrpm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->ecounterrpm(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ParamConfig.Config_Mode_Driver)
}

::google::protobuf::uint8* ParamConfig_Config_Mode_Driver::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ParamConfig.Config_Mode_Driver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 autorun_speed = 1;
  if (this->autorun_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->autorun_speed(), target);
  }

  // int32 autorun_angel = 2;
  if (this->autorun_angel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->autorun_angel(), target);
  }

  // int32 remote_speed = 3;
  if (this->remote_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->remote_speed(), target);
  }

  // int32 remote_angel = 4;
  if (this->remote_angel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->remote_angel(), target);
  }

  // int32 remote_AcceVelocity = 5;
  if (this->remote_accevelocity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->remote_accevelocity(), target);
  }

  // float ReductionRatiol = 6;
  if (this->reductionratiol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->reductionratiol(), target);
  }

  // float WheelSsize = 7;
  if (this->wheelssize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->wheelssize(), target);
  }

  // float RWheelSsize = 8;
  if (this->rwheelssize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->rwheelssize(), target);
  }

  // float LWheelSsize = 9;
  if (this->lwheelssize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->lwheelssize(), target);
  }

  // int32 EcounterRpm = 10;
  if (this->ecounterrpm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->ecounterrpm(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ParamConfig.Config_Mode_Driver)
  return target;
}

size_t ParamConfig_Config_Mode_Driver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ParamConfig.Config_Mode_Driver)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 autorun_speed = 1;
  if (this->autorun_speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->autorun_speed());
  }

  // int32 autorun_angel = 2;
  if (this->autorun_angel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->autorun_angel());
  }

  // int32 remote_speed = 3;
  if (this->remote_speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->remote_speed());
  }

  // int32 remote_angel = 4;
  if (this->remote_angel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->remote_angel());
  }

  // int32 remote_AcceVelocity = 5;
  if (this->remote_accevelocity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->remote_accevelocity());
  }

  // float ReductionRatiol = 6;
  if (this->reductionratiol() != 0) {
    total_size += 1 + 4;
  }

  // float WheelSsize = 7;
  if (this->wheelssize() != 0) {
    total_size += 1 + 4;
  }

  // float RWheelSsize = 8;
  if (this->rwheelssize() != 0) {
    total_size += 1 + 4;
  }

  // float LWheelSsize = 9;
  if (this->lwheelssize() != 0) {
    total_size += 1 + 4;
  }

  // int32 EcounterRpm = 10;
  if (this->ecounterrpm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ecounterrpm());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParamConfig_Config_Mode_Driver::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ParamConfig.Config_Mode_Driver)
  GOOGLE_DCHECK_NE(&from, this);
  const ParamConfig_Config_Mode_Driver* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParamConfig_Config_Mode_Driver>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ParamConfig.Config_Mode_Driver)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ParamConfig.Config_Mode_Driver)
    MergeFrom(*source);
  }
}

void ParamConfig_Config_Mode_Driver::MergeFrom(const ParamConfig_Config_Mode_Driver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ParamConfig.Config_Mode_Driver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.autorun_speed() != 0) {
    set_autorun_speed(from.autorun_speed());
  }
  if (from.autorun_angel() != 0) {
    set_autorun_angel(from.autorun_angel());
  }
  if (from.remote_speed() != 0) {
    set_remote_speed(from.remote_speed());
  }
  if (from.remote_angel() != 0) {
    set_remote_angel(from.remote_angel());
  }
  if (from.remote_accevelocity() != 0) {
    set_remote_accevelocity(from.remote_accevelocity());
  }
  if (from.reductionratiol() != 0) {
    set_reductionratiol(from.reductionratiol());
  }
  if (from.wheelssize() != 0) {
    set_wheelssize(from.wheelssize());
  }
  if (from.rwheelssize() != 0) {
    set_rwheelssize(from.rwheelssize());
  }
  if (from.lwheelssize() != 0) {
    set_lwheelssize(from.lwheelssize());
  }
  if (from.ecounterrpm() != 0) {
    set_ecounterrpm(from.ecounterrpm());
  }
}

void ParamConfig_Config_Mode_Driver::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ParamConfig.Config_Mode_Driver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParamConfig_Config_Mode_Driver::CopyFrom(const ParamConfig_Config_Mode_Driver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ParamConfig.Config_Mode_Driver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParamConfig_Config_Mode_Driver::IsInitialized() const {
  return true;
}

void ParamConfig_Config_Mode_Driver::Swap(ParamConfig_Config_Mode_Driver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParamConfig_Config_Mode_Driver::InternalSwap(ParamConfig_Config_Mode_Driver* other) {
  using std::swap;
  swap(autorun_speed_, other->autorun_speed_);
  swap(autorun_angel_, other->autorun_angel_);
  swap(remote_speed_, other->remote_speed_);
  swap(remote_angel_, other->remote_angel_);
  swap(remote_accevelocity_, other->remote_accevelocity_);
  swap(reductionratiol_, other->reductionratiol_);
  swap(wheelssize_, other->wheelssize_);
  swap(rwheelssize_, other->rwheelssize_);
  swap(lwheelssize_, other->lwheelssize_);
  swap(ecounterrpm_, other->ecounterrpm_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ParamConfig_Config_Mode_Driver::GetMetadata() const {
  protobuf_ParamConfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ParamConfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ParamConfig_Config_Error_Mode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParamConfig_Config_Error_Mode::kCarLeftFDriverErrorIscheckFieldNumber;
const int ParamConfig_Config_Error_Mode::kCarRightFDriverErrorIscheckFieldNumber;
const int ParamConfig_Config_Error_Mode::kCarLeftBDriverErrorIscheckFieldNumber;
const int ParamConfig_Config_Error_Mode::kCarRightBDriverErrorIscheckFieldNumber;
const int ParamConfig_Config_Error_Mode::kLeftFDriverComErrorIscheckFieldNumber;
const int ParamConfig_Config_Error_Mode::kRightFDriverComErrorIscheckFieldNumber;
const int ParamConfig_Config_Error_Mode::kLeftBDriverComErrorIscheckFieldNumber;
const int ParamConfig_Config_Error_Mode::kRightBDriverComErrorIscheckFieldNumber;
const int ParamConfig_Config_Error_Mode::kExternComDevErrorIscheckFieldNumber;
const int ParamConfig_Config_Error_Mode::kBMSSysErrorIscheckFieldNumber;
const int ParamConfig_Config_Error_Mode::kObstacleStopErrorIscheckFieldNumber;
const int ParamConfig_Config_Error_Mode::kCashSwitchStopErrorIscheckFieldNumber;
const int ParamConfig_Config_Error_Mode::kCurrentOverloadErrorIscheckFieldNumber;
const int ParamConfig_Config_Error_Mode::kXrs2015DriverNodeOFFIscheckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParamConfig_Config_Error_Mode::ParamConfig_Config_Error_Mode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ParamConfig_2eproto::scc_info_ParamConfig_Config_Error_Mode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ParamConfig.Config_Error_Mode)
}
ParamConfig_Config_Error_Mode::ParamConfig_Config_Error_Mode(const ParamConfig_Config_Error_Mode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&carleftfdrivererror_ischeck_, &from.carleftfdrivererror_ischeck_,
    static_cast<size_t>(reinterpret_cast<char*>(&xrs2015_drivernodeoff_ischeck_) -
    reinterpret_cast<char*>(&carleftfdrivererror_ischeck_)) + sizeof(xrs2015_drivernodeoff_ischeck_));
  // @@protoc_insertion_point(copy_constructor:ParamConfig.Config_Error_Mode)
}

void ParamConfig_Config_Error_Mode::SharedCtor() {
  ::memset(&carleftfdrivererror_ischeck_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&xrs2015_drivernodeoff_ischeck_) -
      reinterpret_cast<char*>(&carleftfdrivererror_ischeck_)) + sizeof(xrs2015_drivernodeoff_ischeck_));
}

ParamConfig_Config_Error_Mode::~ParamConfig_Config_Error_Mode() {
  // @@protoc_insertion_point(destructor:ParamConfig.Config_Error_Mode)
  SharedDtor();
}

void ParamConfig_Config_Error_Mode::SharedDtor() {
}

void ParamConfig_Config_Error_Mode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ParamConfig_Config_Error_Mode::descriptor() {
  ::protobuf_ParamConfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ParamConfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParamConfig_Config_Error_Mode& ParamConfig_Config_Error_Mode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ParamConfig_2eproto::scc_info_ParamConfig_Config_Error_Mode.base);
  return *internal_default_instance();
}


void ParamConfig_Config_Error_Mode::Clear() {
// @@protoc_insertion_point(message_clear_start:ParamConfig.Config_Error_Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&carleftfdrivererror_ischeck_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&xrs2015_drivernodeoff_ischeck_) -
      reinterpret_cast<char*>(&carleftfdrivererror_ischeck_)) + sizeof(xrs2015_drivernodeoff_ischeck_));
  _internal_metadata_.Clear();
}

bool ParamConfig_Config_Error_Mode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ParamConfig.Config_Error_Mode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool CarLeftFDriverError_Ischeck = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &carleftfdrivererror_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool CarRightFDriverError_Ischeck = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &carrightfdrivererror_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool CarLeftBDriverError_Ischeck = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &carleftbdrivererror_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool CarRightBDriverError_Ischeck = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &carrightbdrivererror_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool LeftFDriverComError_Ischeck = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &leftfdrivercomerror_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool RightFDriverComError_Ischeck = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rightfdrivercomerror_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool LeftBDriverComError_Ischeck = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &leftbdrivercomerror_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool RightBDriverComError_Ischeck = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rightbdrivercomerror_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ExternComDevError_Ischeck = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &externcomdeverror_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMSSysError_Ischeck = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bmssyserror_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ObstacleStopError_Ischeck = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &obstaclestoperror_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool CashSwitchStopError_Ischeck = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cashswitchstoperror_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool CurrentOverloadError_Ischeck = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &currentoverloaderror_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xrs2015_driverNodeOFF_Ischeck = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xrs2015_drivernodeoff_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ParamConfig.Config_Error_Mode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ParamConfig.Config_Error_Mode)
  return false;
#undef DO_
}

void ParamConfig_Config_Error_Mode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ParamConfig.Config_Error_Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool CarLeftFDriverError_Ischeck = 1;
  if (this->carleftfdrivererror_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->carleftfdrivererror_ischeck(), output);
  }

  // bool CarRightFDriverError_Ischeck = 2;
  if (this->carrightfdrivererror_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->carrightfdrivererror_ischeck(), output);
  }

  // bool CarLeftBDriverError_Ischeck = 3;
  if (this->carleftbdrivererror_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->carleftbdrivererror_ischeck(), output);
  }

  // bool CarRightBDriverError_Ischeck = 4;
  if (this->carrightbdrivererror_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->carrightbdrivererror_ischeck(), output);
  }

  // bool LeftFDriverComError_Ischeck = 5;
  if (this->leftfdrivercomerror_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->leftfdrivercomerror_ischeck(), output);
  }

  // bool RightFDriverComError_Ischeck = 6;
  if (this->rightfdrivercomerror_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->rightfdrivercomerror_ischeck(), output);
  }

  // bool LeftBDriverComError_Ischeck = 7;
  if (this->leftbdrivercomerror_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->leftbdrivercomerror_ischeck(), output);
  }

  // bool RightBDriverComError_Ischeck = 8;
  if (this->rightbdrivercomerror_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->rightbdrivercomerror_ischeck(), output);
  }

  // bool ExternComDevError_Ischeck = 9;
  if (this->externcomdeverror_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->externcomdeverror_ischeck(), output);
  }

  // bool BMSSysError_Ischeck = 10;
  if (this->bmssyserror_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->bmssyserror_ischeck(), output);
  }

  // bool ObstacleStopError_Ischeck = 11;
  if (this->obstaclestoperror_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->obstaclestoperror_ischeck(), output);
  }

  // bool CashSwitchStopError_Ischeck = 12;
  if (this->cashswitchstoperror_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->cashswitchstoperror_ischeck(), output);
  }

  // bool CurrentOverloadError_Ischeck = 13;
  if (this->currentoverloaderror_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->currentoverloaderror_ischeck(), output);
  }

  // bool xrs2015_driverNodeOFF_Ischeck = 14;
  if (this->xrs2015_drivernodeoff_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->xrs2015_drivernodeoff_ischeck(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ParamConfig.Config_Error_Mode)
}

::google::protobuf::uint8* ParamConfig_Config_Error_Mode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ParamConfig.Config_Error_Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool CarLeftFDriverError_Ischeck = 1;
  if (this->carleftfdrivererror_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->carleftfdrivererror_ischeck(), target);
  }

  // bool CarRightFDriverError_Ischeck = 2;
  if (this->carrightfdrivererror_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->carrightfdrivererror_ischeck(), target);
  }

  // bool CarLeftBDriverError_Ischeck = 3;
  if (this->carleftbdrivererror_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->carleftbdrivererror_ischeck(), target);
  }

  // bool CarRightBDriverError_Ischeck = 4;
  if (this->carrightbdrivererror_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->carrightbdrivererror_ischeck(), target);
  }

  // bool LeftFDriverComError_Ischeck = 5;
  if (this->leftfdrivercomerror_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->leftfdrivercomerror_ischeck(), target);
  }

  // bool RightFDriverComError_Ischeck = 6;
  if (this->rightfdrivercomerror_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->rightfdrivercomerror_ischeck(), target);
  }

  // bool LeftBDriverComError_Ischeck = 7;
  if (this->leftbdrivercomerror_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->leftbdrivercomerror_ischeck(), target);
  }

  // bool RightBDriverComError_Ischeck = 8;
  if (this->rightbdrivercomerror_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->rightbdrivercomerror_ischeck(), target);
  }

  // bool ExternComDevError_Ischeck = 9;
  if (this->externcomdeverror_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->externcomdeverror_ischeck(), target);
  }

  // bool BMSSysError_Ischeck = 10;
  if (this->bmssyserror_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->bmssyserror_ischeck(), target);
  }

  // bool ObstacleStopError_Ischeck = 11;
  if (this->obstaclestoperror_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->obstaclestoperror_ischeck(), target);
  }

  // bool CashSwitchStopError_Ischeck = 12;
  if (this->cashswitchstoperror_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->cashswitchstoperror_ischeck(), target);
  }

  // bool CurrentOverloadError_Ischeck = 13;
  if (this->currentoverloaderror_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->currentoverloaderror_ischeck(), target);
  }

  // bool xrs2015_driverNodeOFF_Ischeck = 14;
  if (this->xrs2015_drivernodeoff_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->xrs2015_drivernodeoff_ischeck(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ParamConfig.Config_Error_Mode)
  return target;
}

size_t ParamConfig_Config_Error_Mode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ParamConfig.Config_Error_Mode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool CarLeftFDriverError_Ischeck = 1;
  if (this->carleftfdrivererror_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool CarRightFDriverError_Ischeck = 2;
  if (this->carrightfdrivererror_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool CarLeftBDriverError_Ischeck = 3;
  if (this->carleftbdrivererror_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool CarRightBDriverError_Ischeck = 4;
  if (this->carrightbdrivererror_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool LeftFDriverComError_Ischeck = 5;
  if (this->leftfdrivercomerror_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool RightFDriverComError_Ischeck = 6;
  if (this->rightfdrivercomerror_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool LeftBDriverComError_Ischeck = 7;
  if (this->leftbdrivercomerror_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool RightBDriverComError_Ischeck = 8;
  if (this->rightbdrivercomerror_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool ExternComDevError_Ischeck = 9;
  if (this->externcomdeverror_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool BMSSysError_Ischeck = 10;
  if (this->bmssyserror_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool ObstacleStopError_Ischeck = 11;
  if (this->obstaclestoperror_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool CashSwitchStopError_Ischeck = 12;
  if (this->cashswitchstoperror_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool CurrentOverloadError_Ischeck = 13;
  if (this->currentoverloaderror_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool xrs2015_driverNodeOFF_Ischeck = 14;
  if (this->xrs2015_drivernodeoff_ischeck() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParamConfig_Config_Error_Mode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ParamConfig.Config_Error_Mode)
  GOOGLE_DCHECK_NE(&from, this);
  const ParamConfig_Config_Error_Mode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParamConfig_Config_Error_Mode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ParamConfig.Config_Error_Mode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ParamConfig.Config_Error_Mode)
    MergeFrom(*source);
  }
}

void ParamConfig_Config_Error_Mode::MergeFrom(const ParamConfig_Config_Error_Mode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ParamConfig.Config_Error_Mode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.carleftfdrivererror_ischeck() != 0) {
    set_carleftfdrivererror_ischeck(from.carleftfdrivererror_ischeck());
  }
  if (from.carrightfdrivererror_ischeck() != 0) {
    set_carrightfdrivererror_ischeck(from.carrightfdrivererror_ischeck());
  }
  if (from.carleftbdrivererror_ischeck() != 0) {
    set_carleftbdrivererror_ischeck(from.carleftbdrivererror_ischeck());
  }
  if (from.carrightbdrivererror_ischeck() != 0) {
    set_carrightbdrivererror_ischeck(from.carrightbdrivererror_ischeck());
  }
  if (from.leftfdrivercomerror_ischeck() != 0) {
    set_leftfdrivercomerror_ischeck(from.leftfdrivercomerror_ischeck());
  }
  if (from.rightfdrivercomerror_ischeck() != 0) {
    set_rightfdrivercomerror_ischeck(from.rightfdrivercomerror_ischeck());
  }
  if (from.leftbdrivercomerror_ischeck() != 0) {
    set_leftbdrivercomerror_ischeck(from.leftbdrivercomerror_ischeck());
  }
  if (from.rightbdrivercomerror_ischeck() != 0) {
    set_rightbdrivercomerror_ischeck(from.rightbdrivercomerror_ischeck());
  }
  if (from.externcomdeverror_ischeck() != 0) {
    set_externcomdeverror_ischeck(from.externcomdeverror_ischeck());
  }
  if (from.bmssyserror_ischeck() != 0) {
    set_bmssyserror_ischeck(from.bmssyserror_ischeck());
  }
  if (from.obstaclestoperror_ischeck() != 0) {
    set_obstaclestoperror_ischeck(from.obstaclestoperror_ischeck());
  }
  if (from.cashswitchstoperror_ischeck() != 0) {
    set_cashswitchstoperror_ischeck(from.cashswitchstoperror_ischeck());
  }
  if (from.currentoverloaderror_ischeck() != 0) {
    set_currentoverloaderror_ischeck(from.currentoverloaderror_ischeck());
  }
  if (from.xrs2015_drivernodeoff_ischeck() != 0) {
    set_xrs2015_drivernodeoff_ischeck(from.xrs2015_drivernodeoff_ischeck());
  }
}

void ParamConfig_Config_Error_Mode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ParamConfig.Config_Error_Mode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParamConfig_Config_Error_Mode::CopyFrom(const ParamConfig_Config_Error_Mode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ParamConfig.Config_Error_Mode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParamConfig_Config_Error_Mode::IsInitialized() const {
  return true;
}

void ParamConfig_Config_Error_Mode::Swap(ParamConfig_Config_Error_Mode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParamConfig_Config_Error_Mode::InternalSwap(ParamConfig_Config_Error_Mode* other) {
  using std::swap;
  swap(carleftfdrivererror_ischeck_, other->carleftfdrivererror_ischeck_);
  swap(carrightfdrivererror_ischeck_, other->carrightfdrivererror_ischeck_);
  swap(carleftbdrivererror_ischeck_, other->carleftbdrivererror_ischeck_);
  swap(carrightbdrivererror_ischeck_, other->carrightbdrivererror_ischeck_);
  swap(leftfdrivercomerror_ischeck_, other->leftfdrivercomerror_ischeck_);
  swap(rightfdrivercomerror_ischeck_, other->rightfdrivercomerror_ischeck_);
  swap(leftbdrivercomerror_ischeck_, other->leftbdrivercomerror_ischeck_);
  swap(rightbdrivercomerror_ischeck_, other->rightbdrivercomerror_ischeck_);
  swap(externcomdeverror_ischeck_, other->externcomdeverror_ischeck_);
  swap(bmssyserror_ischeck_, other->bmssyserror_ischeck_);
  swap(obstaclestoperror_ischeck_, other->obstaclestoperror_ischeck_);
  swap(cashswitchstoperror_ischeck_, other->cashswitchstoperror_ischeck_);
  swap(currentoverloaderror_ischeck_, other->currentoverloaderror_ischeck_);
  swap(xrs2015_drivernodeoff_ischeck_, other->xrs2015_drivernodeoff_ischeck_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ParamConfig_Config_Error_Mode::GetMetadata() const {
  protobuf_ParamConfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ParamConfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ParamConfig_Config_Alarm_Mode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParamConfig_Config_Alarm_Mode::kCtrolBoxHighTemAlarmIscheckFieldNumber;
const int ParamConfig_Config_Alarm_Mode::kCtrolBoxFrozenTemAlarmIscheckFieldNumber;
const int ParamConfig_Config_Alarm_Mode::kBMSModComLostAlarmIscheckFieldNumber;
const int ParamConfig_Config_Alarm_Mode::kEmergencyStatusStopIscheckFieldNumber;
const int ParamConfig_Config_Alarm_Mode::kEcanExternSnsorNdeOFFIscheckFieldNumber;
const int ParamConfig_Config_Alarm_Mode::kZmqTransNodeOFFIscheckFieldNumber;
const int ParamConfig_Config_Alarm_Mode::kJoyTestNodeOFFIscheckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParamConfig_Config_Alarm_Mode::ParamConfig_Config_Alarm_Mode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ParamConfig_2eproto::scc_info_ParamConfig_Config_Alarm_Mode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ParamConfig.Config_Alarm_Mode)
}
ParamConfig_Config_Alarm_Mode::ParamConfig_Config_Alarm_Mode(const ParamConfig_Config_Alarm_Mode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ctrolboxhightemalarm_ischeck_, &from.ctrolboxhightemalarm_ischeck_,
    static_cast<size_t>(reinterpret_cast<char*>(&joytestnodeoff_ischeck_) -
    reinterpret_cast<char*>(&ctrolboxhightemalarm_ischeck_)) + sizeof(joytestnodeoff_ischeck_));
  // @@protoc_insertion_point(copy_constructor:ParamConfig.Config_Alarm_Mode)
}

void ParamConfig_Config_Alarm_Mode::SharedCtor() {
  ::memset(&ctrolboxhightemalarm_ischeck_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&joytestnodeoff_ischeck_) -
      reinterpret_cast<char*>(&ctrolboxhightemalarm_ischeck_)) + sizeof(joytestnodeoff_ischeck_));
}

ParamConfig_Config_Alarm_Mode::~ParamConfig_Config_Alarm_Mode() {
  // @@protoc_insertion_point(destructor:ParamConfig.Config_Alarm_Mode)
  SharedDtor();
}

void ParamConfig_Config_Alarm_Mode::SharedDtor() {
}

void ParamConfig_Config_Alarm_Mode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ParamConfig_Config_Alarm_Mode::descriptor() {
  ::protobuf_ParamConfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ParamConfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParamConfig_Config_Alarm_Mode& ParamConfig_Config_Alarm_Mode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ParamConfig_2eproto::scc_info_ParamConfig_Config_Alarm_Mode.base);
  return *internal_default_instance();
}


void ParamConfig_Config_Alarm_Mode::Clear() {
// @@protoc_insertion_point(message_clear_start:ParamConfig.Config_Alarm_Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ctrolboxhightemalarm_ischeck_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&joytestnodeoff_ischeck_) -
      reinterpret_cast<char*>(&ctrolboxhightemalarm_ischeck_)) + sizeof(joytestnodeoff_ischeck_));
  _internal_metadata_.Clear();
}

bool ParamConfig_Config_Alarm_Mode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ParamConfig.Config_Alarm_Mode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool CtrolBoxHighTemAlarm_Ischeck = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ctrolboxhightemalarm_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool CtrolBoxFrozenTemAlarm_Ischeck = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ctrolboxfrozentemalarm_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMSModComLostAlarm_Ischeck = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bmsmodcomlostalarm_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Emergency_Status_stop_Ischeck = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &emergency_status_stop_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool EcanExternSnsorNdeOFF_Ischeck = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ecanexternsnsorndeoff_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ZmqTransNodeOFF_Ischeck = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &zmqtransnodeoff_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool JoyTestNodeOFF_Ischeck = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &joytestnodeoff_ischeck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ParamConfig.Config_Alarm_Mode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ParamConfig.Config_Alarm_Mode)
  return false;
#undef DO_
}

void ParamConfig_Config_Alarm_Mode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ParamConfig.Config_Alarm_Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool CtrolBoxHighTemAlarm_Ischeck = 1;
  if (this->ctrolboxhightemalarm_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ctrolboxhightemalarm_ischeck(), output);
  }

  // bool CtrolBoxFrozenTemAlarm_Ischeck = 2;
  if (this->ctrolboxfrozentemalarm_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->ctrolboxfrozentemalarm_ischeck(), output);
  }

  // bool BMSModComLostAlarm_Ischeck = 3;
  if (this->bmsmodcomlostalarm_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bmsmodcomlostalarm_ischeck(), output);
  }

  // bool Emergency_Status_stop_Ischeck = 4;
  if (this->emergency_status_stop_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->emergency_status_stop_ischeck(), output);
  }

  // bool EcanExternSnsorNdeOFF_Ischeck = 5;
  if (this->ecanexternsnsorndeoff_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->ecanexternsnsorndeoff_ischeck(), output);
  }

  // bool ZmqTransNodeOFF_Ischeck = 6;
  if (this->zmqtransnodeoff_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->zmqtransnodeoff_ischeck(), output);
  }

  // bool JoyTestNodeOFF_Ischeck = 7;
  if (this->joytestnodeoff_ischeck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->joytestnodeoff_ischeck(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ParamConfig.Config_Alarm_Mode)
}

::google::protobuf::uint8* ParamConfig_Config_Alarm_Mode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ParamConfig.Config_Alarm_Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool CtrolBoxHighTemAlarm_Ischeck = 1;
  if (this->ctrolboxhightemalarm_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ctrolboxhightemalarm_ischeck(), target);
  }

  // bool CtrolBoxFrozenTemAlarm_Ischeck = 2;
  if (this->ctrolboxfrozentemalarm_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->ctrolboxfrozentemalarm_ischeck(), target);
  }

  // bool BMSModComLostAlarm_Ischeck = 3;
  if (this->bmsmodcomlostalarm_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->bmsmodcomlostalarm_ischeck(), target);
  }

  // bool Emergency_Status_stop_Ischeck = 4;
  if (this->emergency_status_stop_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->emergency_status_stop_ischeck(), target);
  }

  // bool EcanExternSnsorNdeOFF_Ischeck = 5;
  if (this->ecanexternsnsorndeoff_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->ecanexternsnsorndeoff_ischeck(), target);
  }

  // bool ZmqTransNodeOFF_Ischeck = 6;
  if (this->zmqtransnodeoff_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->zmqtransnodeoff_ischeck(), target);
  }

  // bool JoyTestNodeOFF_Ischeck = 7;
  if (this->joytestnodeoff_ischeck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->joytestnodeoff_ischeck(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ParamConfig.Config_Alarm_Mode)
  return target;
}

size_t ParamConfig_Config_Alarm_Mode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ParamConfig.Config_Alarm_Mode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool CtrolBoxHighTemAlarm_Ischeck = 1;
  if (this->ctrolboxhightemalarm_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool CtrolBoxFrozenTemAlarm_Ischeck = 2;
  if (this->ctrolboxfrozentemalarm_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool BMSModComLostAlarm_Ischeck = 3;
  if (this->bmsmodcomlostalarm_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool Emergency_Status_stop_Ischeck = 4;
  if (this->emergency_status_stop_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool EcanExternSnsorNdeOFF_Ischeck = 5;
  if (this->ecanexternsnsorndeoff_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool ZmqTransNodeOFF_Ischeck = 6;
  if (this->zmqtransnodeoff_ischeck() != 0) {
    total_size += 1 + 1;
  }

  // bool JoyTestNodeOFF_Ischeck = 7;
  if (this->joytestnodeoff_ischeck() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParamConfig_Config_Alarm_Mode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ParamConfig.Config_Alarm_Mode)
  GOOGLE_DCHECK_NE(&from, this);
  const ParamConfig_Config_Alarm_Mode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParamConfig_Config_Alarm_Mode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ParamConfig.Config_Alarm_Mode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ParamConfig.Config_Alarm_Mode)
    MergeFrom(*source);
  }
}

void ParamConfig_Config_Alarm_Mode::MergeFrom(const ParamConfig_Config_Alarm_Mode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ParamConfig.Config_Alarm_Mode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ctrolboxhightemalarm_ischeck() != 0) {
    set_ctrolboxhightemalarm_ischeck(from.ctrolboxhightemalarm_ischeck());
  }
  if (from.ctrolboxfrozentemalarm_ischeck() != 0) {
    set_ctrolboxfrozentemalarm_ischeck(from.ctrolboxfrozentemalarm_ischeck());
  }
  if (from.bmsmodcomlostalarm_ischeck() != 0) {
    set_bmsmodcomlostalarm_ischeck(from.bmsmodcomlostalarm_ischeck());
  }
  if (from.emergency_status_stop_ischeck() != 0) {
    set_emergency_status_stop_ischeck(from.emergency_status_stop_ischeck());
  }
  if (from.ecanexternsnsorndeoff_ischeck() != 0) {
    set_ecanexternsnsorndeoff_ischeck(from.ecanexternsnsorndeoff_ischeck());
  }
  if (from.zmqtransnodeoff_ischeck() != 0) {
    set_zmqtransnodeoff_ischeck(from.zmqtransnodeoff_ischeck());
  }
  if (from.joytestnodeoff_ischeck() != 0) {
    set_joytestnodeoff_ischeck(from.joytestnodeoff_ischeck());
  }
}

void ParamConfig_Config_Alarm_Mode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ParamConfig.Config_Alarm_Mode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParamConfig_Config_Alarm_Mode::CopyFrom(const ParamConfig_Config_Alarm_Mode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ParamConfig.Config_Alarm_Mode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParamConfig_Config_Alarm_Mode::IsInitialized() const {
  return true;
}

void ParamConfig_Config_Alarm_Mode::Swap(ParamConfig_Config_Alarm_Mode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParamConfig_Config_Alarm_Mode::InternalSwap(ParamConfig_Config_Alarm_Mode* other) {
  using std::swap;
  swap(ctrolboxhightemalarm_ischeck_, other->ctrolboxhightemalarm_ischeck_);
  swap(ctrolboxfrozentemalarm_ischeck_, other->ctrolboxfrozentemalarm_ischeck_);
  swap(bmsmodcomlostalarm_ischeck_, other->bmsmodcomlostalarm_ischeck_);
  swap(emergency_status_stop_ischeck_, other->emergency_status_stop_ischeck_);
  swap(ecanexternsnsorndeoff_ischeck_, other->ecanexternsnsorndeoff_ischeck_);
  swap(zmqtransnodeoff_ischeck_, other->zmqtransnodeoff_ischeck_);
  swap(joytestnodeoff_ischeck_, other->joytestnodeoff_ischeck_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ParamConfig_Config_Alarm_Mode::GetMetadata() const {
  protobuf_ParamConfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ParamConfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ParamConfig::InitAsDefaultInstance() {
  ::_ParamConfig_default_instance_._instance.get_mutable()->config_driver_msg_ = const_cast< ::ParamConfig_Config_Mode_Driver*>(
      ::ParamConfig_Config_Mode_Driver::internal_default_instance());
  ::_ParamConfig_default_instance_._instance.get_mutable()->config_error_msg_ = const_cast< ::ParamConfig_Config_Error_Mode*>(
      ::ParamConfig_Config_Error_Mode::internal_default_instance());
  ::_ParamConfig_default_instance_._instance.get_mutable()->config_alarm_msg_ = const_cast< ::ParamConfig_Config_Alarm_Mode*>(
      ::ParamConfig_Config_Alarm_Mode::internal_default_instance());
  ::_ParamConfig_default_instance_._instance.get_mutable()->config_extern_msg_ = const_cast< ::ExternSensorConfig*>(
      ::ExternSensorConfig::internal_default_instance());
}
void ParamConfig::clear_config_extern_msg() {
  if (GetArenaNoVirtual() == NULL && config_extern_msg_ != NULL) {
    delete config_extern_msg_;
  }
  config_extern_msg_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParamConfig::kConfigDriverMsgFieldNumber;
const int ParamConfig::kConfigErrorMsgFieldNumber;
const int ParamConfig::kConfigAlarmMsgFieldNumber;
const int ParamConfig::kConfigExternMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParamConfig::ParamConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ParamConfig_2eproto::scc_info_ParamConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ParamConfig)
}
ParamConfig::ParamConfig(const ParamConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config_driver_msg()) {
    config_driver_msg_ = new ::ParamConfig_Config_Mode_Driver(*from.config_driver_msg_);
  } else {
    config_driver_msg_ = NULL;
  }
  if (from.has_config_error_msg()) {
    config_error_msg_ = new ::ParamConfig_Config_Error_Mode(*from.config_error_msg_);
  } else {
    config_error_msg_ = NULL;
  }
  if (from.has_config_alarm_msg()) {
    config_alarm_msg_ = new ::ParamConfig_Config_Alarm_Mode(*from.config_alarm_msg_);
  } else {
    config_alarm_msg_ = NULL;
  }
  if (from.has_config_extern_msg()) {
    config_extern_msg_ = new ::ExternSensorConfig(*from.config_extern_msg_);
  } else {
    config_extern_msg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ParamConfig)
}

void ParamConfig::SharedCtor() {
  ::memset(&config_driver_msg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_extern_msg_) -
      reinterpret_cast<char*>(&config_driver_msg_)) + sizeof(config_extern_msg_));
}

ParamConfig::~ParamConfig() {
  // @@protoc_insertion_point(destructor:ParamConfig)
  SharedDtor();
}

void ParamConfig::SharedDtor() {
  if (this != internal_default_instance()) delete config_driver_msg_;
  if (this != internal_default_instance()) delete config_error_msg_;
  if (this != internal_default_instance()) delete config_alarm_msg_;
  if (this != internal_default_instance()) delete config_extern_msg_;
}

void ParamConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ParamConfig::descriptor() {
  ::protobuf_ParamConfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ParamConfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParamConfig& ParamConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ParamConfig_2eproto::scc_info_ParamConfig.base);
  return *internal_default_instance();
}


void ParamConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:ParamConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_driver_msg_ != NULL) {
    delete config_driver_msg_;
  }
  config_driver_msg_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_error_msg_ != NULL) {
    delete config_error_msg_;
  }
  config_error_msg_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_alarm_msg_ != NULL) {
    delete config_alarm_msg_;
  }
  config_alarm_msg_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_extern_msg_ != NULL) {
    delete config_extern_msg_;
  }
  config_extern_msg_ = NULL;
  _internal_metadata_.Clear();
}

bool ParamConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ParamConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ParamConfig.Config_Mode_Driver Config_Driver_Msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config_driver_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ParamConfig.Config_Error_Mode Config_Error_Msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config_error_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ParamConfig.Config_Alarm_Mode Config_Alarm_Msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config_alarm_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ExternSensorConfig Config_extern_Msg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config_extern_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ParamConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ParamConfig)
  return false;
#undef DO_
}

void ParamConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ParamConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ParamConfig.Config_Mode_Driver Config_Driver_Msg = 1;
  if (this->has_config_driver_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_config_driver_msg(), output);
  }

  // .ParamConfig.Config_Error_Mode Config_Error_Msg = 2;
  if (this->has_config_error_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_config_error_msg(), output);
  }

  // .ParamConfig.Config_Alarm_Mode Config_Alarm_Msg = 3;
  if (this->has_config_alarm_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_config_alarm_msg(), output);
  }

  // .ExternSensorConfig Config_extern_Msg = 4;
  if (this->has_config_extern_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_config_extern_msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ParamConfig)
}

::google::protobuf::uint8* ParamConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ParamConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ParamConfig.Config_Mode_Driver Config_Driver_Msg = 1;
  if (this->has_config_driver_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_config_driver_msg(), deterministic, target);
  }

  // .ParamConfig.Config_Error_Mode Config_Error_Msg = 2;
  if (this->has_config_error_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_config_error_msg(), deterministic, target);
  }

  // .ParamConfig.Config_Alarm_Mode Config_Alarm_Msg = 3;
  if (this->has_config_alarm_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_config_alarm_msg(), deterministic, target);
  }

  // .ExternSensorConfig Config_extern_Msg = 4;
  if (this->has_config_extern_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_config_extern_msg(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ParamConfig)
  return target;
}

size_t ParamConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ParamConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ParamConfig.Config_Mode_Driver Config_Driver_Msg = 1;
  if (this->has_config_driver_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_driver_msg_);
  }

  // .ParamConfig.Config_Error_Mode Config_Error_Msg = 2;
  if (this->has_config_error_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_error_msg_);
  }

  // .ParamConfig.Config_Alarm_Mode Config_Alarm_Msg = 3;
  if (this->has_config_alarm_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_alarm_msg_);
  }

  // .ExternSensorConfig Config_extern_Msg = 4;
  if (this->has_config_extern_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_extern_msg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParamConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ParamConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ParamConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParamConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ParamConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ParamConfig)
    MergeFrom(*source);
  }
}

void ParamConfig::MergeFrom(const ParamConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ParamConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config_driver_msg()) {
    mutable_config_driver_msg()->::ParamConfig_Config_Mode_Driver::MergeFrom(from.config_driver_msg());
  }
  if (from.has_config_error_msg()) {
    mutable_config_error_msg()->::ParamConfig_Config_Error_Mode::MergeFrom(from.config_error_msg());
  }
  if (from.has_config_alarm_msg()) {
    mutable_config_alarm_msg()->::ParamConfig_Config_Alarm_Mode::MergeFrom(from.config_alarm_msg());
  }
  if (from.has_config_extern_msg()) {
    mutable_config_extern_msg()->::ExternSensorConfig::MergeFrom(from.config_extern_msg());
  }
}

void ParamConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ParamConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParamConfig::CopyFrom(const ParamConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ParamConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParamConfig::IsInitialized() const {
  return true;
}

void ParamConfig::Swap(ParamConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParamConfig::InternalSwap(ParamConfig* other) {
  using std::swap;
  swap(config_driver_msg_, other->config_driver_msg_);
  swap(config_error_msg_, other->config_error_msg_);
  swap(config_alarm_msg_, other->config_alarm_msg_);
  swap(config_extern_msg_, other->config_extern_msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ParamConfig::GetMetadata() const {
  protobuf_ParamConfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ParamConfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ParamConfig_Config_Mode_Driver* Arena::CreateMaybeMessage< ::ParamConfig_Config_Mode_Driver >(Arena* arena) {
  return Arena::CreateInternal< ::ParamConfig_Config_Mode_Driver >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ParamConfig_Config_Error_Mode* Arena::CreateMaybeMessage< ::ParamConfig_Config_Error_Mode >(Arena* arena) {
  return Arena::CreateInternal< ::ParamConfig_Config_Error_Mode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ParamConfig_Config_Alarm_Mode* Arena::CreateMaybeMessage< ::ParamConfig_Config_Alarm_Mode >(Arena* arena) {
  return Arena::CreateInternal< ::ParamConfig_Config_Alarm_Mode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ParamConfig* Arena::CreateMaybeMessage< ::ParamConfig >(Arena* arena) {
  return Arena::CreateInternal< ::ParamConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
