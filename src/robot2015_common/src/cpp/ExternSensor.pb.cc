// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ExternSensor.proto

#include "ExternSensor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ExternSensor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ExternSensor_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExternSensor_Mode_PX24ES;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ExternSensor_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExternSensor_Mode_Temp_humi;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ExternSensor_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExternSensor_Mode_fan;
}  // namespace protobuf_ExternSensor_2eproto
class ExternSensor_Mode_Temp_humiDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExternSensor_Mode_Temp_humi>
      _instance;
} _ExternSensor_Mode_Temp_humi_default_instance_;
class ExternSensor_Mode_fanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExternSensor_Mode_fan>
      _instance;
} _ExternSensor_Mode_fan_default_instance_;
class ExternSensor_Mode_PX24ESDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExternSensor_Mode_PX24ES>
      _instance;
} _ExternSensor_Mode_PX24ES_default_instance_;
class ExternSensorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExternSensor>
      _instance;
} _ExternSensor_default_instance_;
namespace protobuf_ExternSensor_2eproto {
static void InitDefaultsExternSensor_Mode_Temp_humi() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ExternSensor_Mode_Temp_humi_default_instance_;
    new (ptr) ::ExternSensor_Mode_Temp_humi();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternSensor_Mode_Temp_humi::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExternSensor_Mode_Temp_humi =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExternSensor_Mode_Temp_humi}, {}};

static void InitDefaultsExternSensor_Mode_fan() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ExternSensor_Mode_fan_default_instance_;
    new (ptr) ::ExternSensor_Mode_fan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternSensor_Mode_fan::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExternSensor_Mode_fan =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExternSensor_Mode_fan}, {}};

static void InitDefaultsExternSensor_Mode_PX24ES() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ExternSensor_Mode_PX24ES_default_instance_;
    new (ptr) ::ExternSensor_Mode_PX24ES();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternSensor_Mode_PX24ES::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExternSensor_Mode_PX24ES =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExternSensor_Mode_PX24ES}, {}};

static void InitDefaultsExternSensor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ExternSensor_default_instance_;
    new (ptr) ::ExternSensor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternSensor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ExternSensor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsExternSensor}, {
      &protobuf_ExternSensor_2eproto::scc_info_ExternSensor_Mode_Temp_humi.base,
      &protobuf_ExternSensor_2eproto::scc_info_ExternSensor_Mode_fan.base,
      &protobuf_ExternSensor_2eproto::scc_info_ExternSensor_Mode_PX24ES.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ExternSensor_Mode_Temp_humi.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExternSensor_Mode_fan.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExternSensor_Mode_PX24ES.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExternSensor.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor_Mode_Temp_humi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor_Mode_Temp_humi, interior_temp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor_Mode_Temp_humi, interior_humi_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor_Mode_fan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor_Mode_fan, fan_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor_Mode_fan, fan_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor_Mode_fan, fan_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor_Mode_fan, vaule_open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor_Mode_fan, vaule_close_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor_Mode_PX24ES, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor_Mode_PX24ES, out1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor_Mode_PX24ES, out2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor_Mode_PX24ES, extraneouslight_out_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor, temp_pt100_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor, temp_humi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor, fan_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor, io_infrared_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor, io_collision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor, led_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor, px24es_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExternSensor, online_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ExternSensor_Mode_Temp_humi)},
  { 7, -1, sizeof(::ExternSensor_Mode_fan)},
  { 17, -1, sizeof(::ExternSensor_Mode_PX24ES)},
  { 25, -1, sizeof(::ExternSensor)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ExternSensor_Mode_Temp_humi_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ExternSensor_Mode_fan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ExternSensor_Mode_PX24ES_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ExternSensor_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ExternSensor.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022ExternSensor.proto\"\351\003\n\014ExternSensor\022\022\n"
      "\nTemp_Pt100\030\001 \003(\005\022/\n\tTemp_humi\030\002 \003(\0132\034.E"
      "xternSensor.Mode_Temp_humi\022\'\n\007fan_msg\030\003 "
      "\003(\0132\026.ExternSensor.Mode_fan\022\023\n\013IO_Infrar"
      "ed\030\004 \003(\005\022\024\n\014IO_collision\030\005 \003(\005\022\022\n\nLED_st"
      "atus\030\006 \001(\t\022)\n\006PX24ES\030\007 \001(\0132\031.ExternSenso"
      "r.Mode_PX24ES\022\016\n\006online\030\010 \001(\005\032>\n\016Mode_Te"
      "mp_humi\022\025\n\rinterior_temp\030\001 \001(\005\022\025\n\rinteri"
      "or_humi\030\002 \001(\005\032i\n\010Mode_fan\022\016\n\006fan_ID\030\001 \001("
      "\005\022\020\n\010fan_Mode\030\002 \001(\005\022\022\n\nfan_status\030\003 \001(\005\022"
      "\022\n\nvaule_open\030\004 \001(\005\022\023\n\013vaule_close\030\005 \001(\005"
      "\032F\n\013Mode_PX24ES\022\014\n\004out1\030\001 \001(\005\022\014\n\004out2\030\002 "
      "\001(\005\022\033\n\023Extraneouslight_out\030\003 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 520);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ExternSensor.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ExternSensor_2eproto

// ===================================================================

void ExternSensor_Mode_Temp_humi::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExternSensor_Mode_Temp_humi::kInteriorTempFieldNumber;
const int ExternSensor_Mode_Temp_humi::kInteriorHumiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExternSensor_Mode_Temp_humi::ExternSensor_Mode_Temp_humi()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ExternSensor_2eproto::scc_info_ExternSensor_Mode_Temp_humi.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ExternSensor.Mode_Temp_humi)
}
ExternSensor_Mode_Temp_humi::ExternSensor_Mode_Temp_humi(const ExternSensor_Mode_Temp_humi& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&interior_temp_, &from.interior_temp_,
    static_cast<size_t>(reinterpret_cast<char*>(&interior_humi_) -
    reinterpret_cast<char*>(&interior_temp_)) + sizeof(interior_humi_));
  // @@protoc_insertion_point(copy_constructor:ExternSensor.Mode_Temp_humi)
}

void ExternSensor_Mode_Temp_humi::SharedCtor() {
  ::memset(&interior_temp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interior_humi_) -
      reinterpret_cast<char*>(&interior_temp_)) + sizeof(interior_humi_));
}

ExternSensor_Mode_Temp_humi::~ExternSensor_Mode_Temp_humi() {
  // @@protoc_insertion_point(destructor:ExternSensor.Mode_Temp_humi)
  SharedDtor();
}

void ExternSensor_Mode_Temp_humi::SharedDtor() {
}

void ExternSensor_Mode_Temp_humi::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExternSensor_Mode_Temp_humi::descriptor() {
  ::protobuf_ExternSensor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExternSensor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExternSensor_Mode_Temp_humi& ExternSensor_Mode_Temp_humi::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ExternSensor_2eproto::scc_info_ExternSensor_Mode_Temp_humi.base);
  return *internal_default_instance();
}


void ExternSensor_Mode_Temp_humi::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternSensor.Mode_Temp_humi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&interior_temp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interior_humi_) -
      reinterpret_cast<char*>(&interior_temp_)) + sizeof(interior_humi_));
  _internal_metadata_.Clear();
}

bool ExternSensor_Mode_Temp_humi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ExternSensor.Mode_Temp_humi)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 interior_temp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &interior_temp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 interior_humi = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &interior_humi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ExternSensor.Mode_Temp_humi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ExternSensor.Mode_Temp_humi)
  return false;
#undef DO_
}

void ExternSensor_Mode_Temp_humi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ExternSensor.Mode_Temp_humi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 interior_temp = 1;
  if (this->interior_temp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->interior_temp(), output);
  }

  // int32 interior_humi = 2;
  if (this->interior_humi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->interior_humi(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ExternSensor.Mode_Temp_humi)
}

::google::protobuf::uint8* ExternSensor_Mode_Temp_humi::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ExternSensor.Mode_Temp_humi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 interior_temp = 1;
  if (this->interior_temp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->interior_temp(), target);
  }

  // int32 interior_humi = 2;
  if (this->interior_humi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->interior_humi(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternSensor.Mode_Temp_humi)
  return target;
}

size_t ExternSensor_Mode_Temp_humi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternSensor.Mode_Temp_humi)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 interior_temp = 1;
  if (this->interior_temp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->interior_temp());
  }

  // int32 interior_humi = 2;
  if (this->interior_humi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->interior_humi());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExternSensor_Mode_Temp_humi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternSensor.Mode_Temp_humi)
  GOOGLE_DCHECK_NE(&from, this);
  const ExternSensor_Mode_Temp_humi* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExternSensor_Mode_Temp_humi>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternSensor.Mode_Temp_humi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternSensor.Mode_Temp_humi)
    MergeFrom(*source);
  }
}

void ExternSensor_Mode_Temp_humi::MergeFrom(const ExternSensor_Mode_Temp_humi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternSensor.Mode_Temp_humi)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.interior_temp() != 0) {
    set_interior_temp(from.interior_temp());
  }
  if (from.interior_humi() != 0) {
    set_interior_humi(from.interior_humi());
  }
}

void ExternSensor_Mode_Temp_humi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternSensor.Mode_Temp_humi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternSensor_Mode_Temp_humi::CopyFrom(const ExternSensor_Mode_Temp_humi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternSensor.Mode_Temp_humi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternSensor_Mode_Temp_humi::IsInitialized() const {
  return true;
}

void ExternSensor_Mode_Temp_humi::Swap(ExternSensor_Mode_Temp_humi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExternSensor_Mode_Temp_humi::InternalSwap(ExternSensor_Mode_Temp_humi* other) {
  using std::swap;
  swap(interior_temp_, other->interior_temp_);
  swap(interior_humi_, other->interior_humi_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExternSensor_Mode_Temp_humi::GetMetadata() const {
  protobuf_ExternSensor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExternSensor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExternSensor_Mode_fan::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExternSensor_Mode_fan::kFanIDFieldNumber;
const int ExternSensor_Mode_fan::kFanModeFieldNumber;
const int ExternSensor_Mode_fan::kFanStatusFieldNumber;
const int ExternSensor_Mode_fan::kVauleOpenFieldNumber;
const int ExternSensor_Mode_fan::kVauleCloseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExternSensor_Mode_fan::ExternSensor_Mode_fan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ExternSensor_2eproto::scc_info_ExternSensor_Mode_fan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ExternSensor.Mode_fan)
}
ExternSensor_Mode_fan::ExternSensor_Mode_fan(const ExternSensor_Mode_fan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fan_id_, &from.fan_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&vaule_close_) -
    reinterpret_cast<char*>(&fan_id_)) + sizeof(vaule_close_));
  // @@protoc_insertion_point(copy_constructor:ExternSensor.Mode_fan)
}

void ExternSensor_Mode_fan::SharedCtor() {
  ::memset(&fan_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vaule_close_) -
      reinterpret_cast<char*>(&fan_id_)) + sizeof(vaule_close_));
}

ExternSensor_Mode_fan::~ExternSensor_Mode_fan() {
  // @@protoc_insertion_point(destructor:ExternSensor.Mode_fan)
  SharedDtor();
}

void ExternSensor_Mode_fan::SharedDtor() {
}

void ExternSensor_Mode_fan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExternSensor_Mode_fan::descriptor() {
  ::protobuf_ExternSensor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExternSensor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExternSensor_Mode_fan& ExternSensor_Mode_fan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ExternSensor_2eproto::scc_info_ExternSensor_Mode_fan.base);
  return *internal_default_instance();
}


void ExternSensor_Mode_fan::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternSensor.Mode_fan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fan_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vaule_close_) -
      reinterpret_cast<char*>(&fan_id_)) + sizeof(vaule_close_));
  _internal_metadata_.Clear();
}

bool ExternSensor_Mode_fan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ExternSensor.Mode_fan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 fan_ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fan_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fan_Mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fan_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fan_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fan_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vaule_open = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vaule_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vaule_close = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vaule_close_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ExternSensor.Mode_fan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ExternSensor.Mode_fan)
  return false;
#undef DO_
}

void ExternSensor_Mode_fan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ExternSensor.Mode_fan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fan_ID = 1;
  if (this->fan_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fan_id(), output);
  }

  // int32 fan_Mode = 2;
  if (this->fan_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fan_mode(), output);
  }

  // int32 fan_status = 3;
  if (this->fan_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fan_status(), output);
  }

  // int32 vaule_open = 4;
  if (this->vaule_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->vaule_open(), output);
  }

  // int32 vaule_close = 5;
  if (this->vaule_close() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->vaule_close(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ExternSensor.Mode_fan)
}

::google::protobuf::uint8* ExternSensor_Mode_fan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ExternSensor.Mode_fan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 fan_ID = 1;
  if (this->fan_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fan_id(), target);
  }

  // int32 fan_Mode = 2;
  if (this->fan_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fan_mode(), target);
  }

  // int32 fan_status = 3;
  if (this->fan_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fan_status(), target);
  }

  // int32 vaule_open = 4;
  if (this->vaule_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->vaule_open(), target);
  }

  // int32 vaule_close = 5;
  if (this->vaule_close() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->vaule_close(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternSensor.Mode_fan)
  return target;
}

size_t ExternSensor_Mode_fan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternSensor.Mode_fan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 fan_ID = 1;
  if (this->fan_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fan_id());
  }

  // int32 fan_Mode = 2;
  if (this->fan_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fan_mode());
  }

  // int32 fan_status = 3;
  if (this->fan_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fan_status());
  }

  // int32 vaule_open = 4;
  if (this->vaule_open() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vaule_open());
  }

  // int32 vaule_close = 5;
  if (this->vaule_close() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vaule_close());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExternSensor_Mode_fan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternSensor.Mode_fan)
  GOOGLE_DCHECK_NE(&from, this);
  const ExternSensor_Mode_fan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExternSensor_Mode_fan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternSensor.Mode_fan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternSensor.Mode_fan)
    MergeFrom(*source);
  }
}

void ExternSensor_Mode_fan::MergeFrom(const ExternSensor_Mode_fan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternSensor.Mode_fan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fan_id() != 0) {
    set_fan_id(from.fan_id());
  }
  if (from.fan_mode() != 0) {
    set_fan_mode(from.fan_mode());
  }
  if (from.fan_status() != 0) {
    set_fan_status(from.fan_status());
  }
  if (from.vaule_open() != 0) {
    set_vaule_open(from.vaule_open());
  }
  if (from.vaule_close() != 0) {
    set_vaule_close(from.vaule_close());
  }
}

void ExternSensor_Mode_fan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternSensor.Mode_fan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternSensor_Mode_fan::CopyFrom(const ExternSensor_Mode_fan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternSensor.Mode_fan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternSensor_Mode_fan::IsInitialized() const {
  return true;
}

void ExternSensor_Mode_fan::Swap(ExternSensor_Mode_fan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExternSensor_Mode_fan::InternalSwap(ExternSensor_Mode_fan* other) {
  using std::swap;
  swap(fan_id_, other->fan_id_);
  swap(fan_mode_, other->fan_mode_);
  swap(fan_status_, other->fan_status_);
  swap(vaule_open_, other->vaule_open_);
  swap(vaule_close_, other->vaule_close_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExternSensor_Mode_fan::GetMetadata() const {
  protobuf_ExternSensor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExternSensor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExternSensor_Mode_PX24ES::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExternSensor_Mode_PX24ES::kOut1FieldNumber;
const int ExternSensor_Mode_PX24ES::kOut2FieldNumber;
const int ExternSensor_Mode_PX24ES::kExtraneouslightOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExternSensor_Mode_PX24ES::ExternSensor_Mode_PX24ES()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ExternSensor_2eproto::scc_info_ExternSensor_Mode_PX24ES.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ExternSensor.Mode_PX24ES)
}
ExternSensor_Mode_PX24ES::ExternSensor_Mode_PX24ES(const ExternSensor_Mode_PX24ES& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&out1_, &from.out1_,
    static_cast<size_t>(reinterpret_cast<char*>(&extraneouslight_out_) -
    reinterpret_cast<char*>(&out1_)) + sizeof(extraneouslight_out_));
  // @@protoc_insertion_point(copy_constructor:ExternSensor.Mode_PX24ES)
}

void ExternSensor_Mode_PX24ES::SharedCtor() {
  ::memset(&out1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extraneouslight_out_) -
      reinterpret_cast<char*>(&out1_)) + sizeof(extraneouslight_out_));
}

ExternSensor_Mode_PX24ES::~ExternSensor_Mode_PX24ES() {
  // @@protoc_insertion_point(destructor:ExternSensor.Mode_PX24ES)
  SharedDtor();
}

void ExternSensor_Mode_PX24ES::SharedDtor() {
}

void ExternSensor_Mode_PX24ES::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExternSensor_Mode_PX24ES::descriptor() {
  ::protobuf_ExternSensor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExternSensor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExternSensor_Mode_PX24ES& ExternSensor_Mode_PX24ES::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ExternSensor_2eproto::scc_info_ExternSensor_Mode_PX24ES.base);
  return *internal_default_instance();
}


void ExternSensor_Mode_PX24ES::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternSensor.Mode_PX24ES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&out1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extraneouslight_out_) -
      reinterpret_cast<char*>(&out1_)) + sizeof(extraneouslight_out_));
  _internal_metadata_.Clear();
}

bool ExternSensor_Mode_PX24ES::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ExternSensor.Mode_PX24ES)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 out1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &out1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 out2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &out2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Extraneouslight_out = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extraneouslight_out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ExternSensor.Mode_PX24ES)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ExternSensor.Mode_PX24ES)
  return false;
#undef DO_
}

void ExternSensor_Mode_PX24ES::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ExternSensor.Mode_PX24ES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 out1 = 1;
  if (this->out1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->out1(), output);
  }

  // int32 out2 = 2;
  if (this->out2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->out2(), output);
  }

  // int32 Extraneouslight_out = 3;
  if (this->extraneouslight_out() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->extraneouslight_out(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ExternSensor.Mode_PX24ES)
}

::google::protobuf::uint8* ExternSensor_Mode_PX24ES::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ExternSensor.Mode_PX24ES)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 out1 = 1;
  if (this->out1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->out1(), target);
  }

  // int32 out2 = 2;
  if (this->out2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->out2(), target);
  }

  // int32 Extraneouslight_out = 3;
  if (this->extraneouslight_out() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->extraneouslight_out(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternSensor.Mode_PX24ES)
  return target;
}

size_t ExternSensor_Mode_PX24ES::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternSensor.Mode_PX24ES)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 out1 = 1;
  if (this->out1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->out1());
  }

  // int32 out2 = 2;
  if (this->out2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->out2());
  }

  // int32 Extraneouslight_out = 3;
  if (this->extraneouslight_out() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->extraneouslight_out());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExternSensor_Mode_PX24ES::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternSensor.Mode_PX24ES)
  GOOGLE_DCHECK_NE(&from, this);
  const ExternSensor_Mode_PX24ES* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExternSensor_Mode_PX24ES>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternSensor.Mode_PX24ES)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternSensor.Mode_PX24ES)
    MergeFrom(*source);
  }
}

void ExternSensor_Mode_PX24ES::MergeFrom(const ExternSensor_Mode_PX24ES& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternSensor.Mode_PX24ES)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.out1() != 0) {
    set_out1(from.out1());
  }
  if (from.out2() != 0) {
    set_out2(from.out2());
  }
  if (from.extraneouslight_out() != 0) {
    set_extraneouslight_out(from.extraneouslight_out());
  }
}

void ExternSensor_Mode_PX24ES::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternSensor.Mode_PX24ES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternSensor_Mode_PX24ES::CopyFrom(const ExternSensor_Mode_PX24ES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternSensor.Mode_PX24ES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternSensor_Mode_PX24ES::IsInitialized() const {
  return true;
}

void ExternSensor_Mode_PX24ES::Swap(ExternSensor_Mode_PX24ES* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExternSensor_Mode_PX24ES::InternalSwap(ExternSensor_Mode_PX24ES* other) {
  using std::swap;
  swap(out1_, other->out1_);
  swap(out2_, other->out2_);
  swap(extraneouslight_out_, other->extraneouslight_out_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExternSensor_Mode_PX24ES::GetMetadata() const {
  protobuf_ExternSensor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExternSensor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExternSensor::InitAsDefaultInstance() {
  ::_ExternSensor_default_instance_._instance.get_mutable()->px24es_ = const_cast< ::ExternSensor_Mode_PX24ES*>(
      ::ExternSensor_Mode_PX24ES::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExternSensor::kTempPt100FieldNumber;
const int ExternSensor::kTempHumiFieldNumber;
const int ExternSensor::kFanMsgFieldNumber;
const int ExternSensor::kIOInfraredFieldNumber;
const int ExternSensor::kIOCollisionFieldNumber;
const int ExternSensor::kLEDStatusFieldNumber;
const int ExternSensor::kPX24ESFieldNumber;
const int ExternSensor::kOnlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExternSensor::ExternSensor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ExternSensor_2eproto::scc_info_ExternSensor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ExternSensor)
}
ExternSensor::ExternSensor(const ExternSensor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      temp_pt100_(from.temp_pt100_),
      temp_humi_(from.temp_humi_),
      fan_msg_(from.fan_msg_),
      io_infrared_(from.io_infrared_),
      io_collision_(from.io_collision_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  led_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.led_status().size() > 0) {
    led_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.led_status_);
  }
  if (from.has_px24es()) {
    px24es_ = new ::ExternSensor_Mode_PX24ES(*from.px24es_);
  } else {
    px24es_ = NULL;
  }
  online_ = from.online_;
  // @@protoc_insertion_point(copy_constructor:ExternSensor)
}

void ExternSensor::SharedCtor() {
  led_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&px24es_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&online_) -
      reinterpret_cast<char*>(&px24es_)) + sizeof(online_));
}

ExternSensor::~ExternSensor() {
  // @@protoc_insertion_point(destructor:ExternSensor)
  SharedDtor();
}

void ExternSensor::SharedDtor() {
  led_status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete px24es_;
}

void ExternSensor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExternSensor::descriptor() {
  ::protobuf_ExternSensor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExternSensor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExternSensor& ExternSensor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ExternSensor_2eproto::scc_info_ExternSensor.base);
  return *internal_default_instance();
}


void ExternSensor::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternSensor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  temp_pt100_.Clear();
  temp_humi_.Clear();
  fan_msg_.Clear();
  io_infrared_.Clear();
  io_collision_.Clear();
  led_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && px24es_ != NULL) {
    delete px24es_;
  }
  px24es_ = NULL;
  online_ = 0;
  _internal_metadata_.Clear();
}

bool ExternSensor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ExternSensor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 Temp_Pt100 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_temp_pt100())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_temp_pt100())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ExternSensor.Mode_Temp_humi Temp_humi = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_temp_humi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ExternSensor.Mode_fan fan_msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fan_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 IO_Infrared = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_io_infrared())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_io_infrared())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 IO_collision = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_io_collision())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_io_collision())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LED_status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_led_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->led_status().data(), static_cast<int>(this->led_status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ExternSensor.LED_status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ExternSensor.Mode_PX24ES PX24ES = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_px24es()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 online = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ExternSensor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ExternSensor)
  return false;
#undef DO_
}

void ExternSensor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ExternSensor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 Temp_Pt100 = 1;
  if (this->temp_pt100_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _temp_pt100_cached_byte_size_));
  }
  for (int i = 0, n = this->temp_pt100_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->temp_pt100(i), output);
  }

  // repeated .ExternSensor.Mode_Temp_humi Temp_humi = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->temp_humi_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->temp_humi(static_cast<int>(i)),
      output);
  }

  // repeated .ExternSensor.Mode_fan fan_msg = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fan_msg_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->fan_msg(static_cast<int>(i)),
      output);
  }

  // repeated int32 IO_Infrared = 4;
  if (this->io_infrared_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _io_infrared_cached_byte_size_));
  }
  for (int i = 0, n = this->io_infrared_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->io_infrared(i), output);
  }

  // repeated int32 IO_collision = 5;
  if (this->io_collision_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _io_collision_cached_byte_size_));
  }
  for (int i = 0, n = this->io_collision_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->io_collision(i), output);
  }

  // string LED_status = 6;
  if (this->led_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->led_status().data(), static_cast<int>(this->led_status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ExternSensor.LED_status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->led_status(), output);
  }

  // .ExternSensor.Mode_PX24ES PX24ES = 7;
  if (this->has_px24es()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_px24es(), output);
  }

  // int32 online = 8;
  if (this->online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->online(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ExternSensor)
}

::google::protobuf::uint8* ExternSensor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ExternSensor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 Temp_Pt100 = 1;
  if (this->temp_pt100_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _temp_pt100_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->temp_pt100_, target);
  }

  // repeated .ExternSensor.Mode_Temp_humi Temp_humi = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->temp_humi_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->temp_humi(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ExternSensor.Mode_fan fan_msg = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fan_msg_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->fan_msg(static_cast<int>(i)), deterministic, target);
  }

  // repeated int32 IO_Infrared = 4;
  if (this->io_infrared_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _io_infrared_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->io_infrared_, target);
  }

  // repeated int32 IO_collision = 5;
  if (this->io_collision_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _io_collision_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->io_collision_, target);
  }

  // string LED_status = 6;
  if (this->led_status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->led_status().data(), static_cast<int>(this->led_status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ExternSensor.LED_status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->led_status(), target);
  }

  // .ExternSensor.Mode_PX24ES PX24ES = 7;
  if (this->has_px24es()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_px24es(), deterministic, target);
  }

  // int32 online = 8;
  if (this->online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->online(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternSensor)
  return target;
}

size_t ExternSensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternSensor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 Temp_Pt100 = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->temp_pt100_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _temp_pt100_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .ExternSensor.Mode_Temp_humi Temp_humi = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->temp_humi_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->temp_humi(static_cast<int>(i)));
    }
  }

  // repeated .ExternSensor.Mode_fan fan_msg = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->fan_msg_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fan_msg(static_cast<int>(i)));
    }
  }

  // repeated int32 IO_Infrared = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->io_infrared_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _io_infrared_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 IO_collision = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->io_collision_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _io_collision_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string LED_status = 6;
  if (this->led_status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->led_status());
  }

  // .ExternSensor.Mode_PX24ES PX24ES = 7;
  if (this->has_px24es()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *px24es_);
  }

  // int32 online = 8;
  if (this->online() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->online());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExternSensor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternSensor)
  GOOGLE_DCHECK_NE(&from, this);
  const ExternSensor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExternSensor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternSensor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternSensor)
    MergeFrom(*source);
  }
}

void ExternSensor::MergeFrom(const ExternSensor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternSensor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  temp_pt100_.MergeFrom(from.temp_pt100_);
  temp_humi_.MergeFrom(from.temp_humi_);
  fan_msg_.MergeFrom(from.fan_msg_);
  io_infrared_.MergeFrom(from.io_infrared_);
  io_collision_.MergeFrom(from.io_collision_);
  if (from.led_status().size() > 0) {

    led_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.led_status_);
  }
  if (from.has_px24es()) {
    mutable_px24es()->::ExternSensor_Mode_PX24ES::MergeFrom(from.px24es());
  }
  if (from.online() != 0) {
    set_online(from.online());
  }
}

void ExternSensor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternSensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternSensor::CopyFrom(const ExternSensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternSensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternSensor::IsInitialized() const {
  return true;
}

void ExternSensor::Swap(ExternSensor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExternSensor::InternalSwap(ExternSensor* other) {
  using std::swap;
  temp_pt100_.InternalSwap(&other->temp_pt100_);
  CastToBase(&temp_humi_)->InternalSwap(CastToBase(&other->temp_humi_));
  CastToBase(&fan_msg_)->InternalSwap(CastToBase(&other->fan_msg_));
  io_infrared_.InternalSwap(&other->io_infrared_);
  io_collision_.InternalSwap(&other->io_collision_);
  led_status_.Swap(&other->led_status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(px24es_, other->px24es_);
  swap(online_, other->online_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExternSensor::GetMetadata() const {
  protobuf_ExternSensor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExternSensor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ExternSensor_Mode_Temp_humi* Arena::CreateMaybeMessage< ::ExternSensor_Mode_Temp_humi >(Arena* arena) {
  return Arena::CreateInternal< ::ExternSensor_Mode_Temp_humi >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ExternSensor_Mode_fan* Arena::CreateMaybeMessage< ::ExternSensor_Mode_fan >(Arena* arena) {
  return Arena::CreateInternal< ::ExternSensor_Mode_fan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ExternSensor_Mode_PX24ES* Arena::CreateMaybeMessage< ::ExternSensor_Mode_PX24ES >(Arena* arena) {
  return Arena::CreateInternal< ::ExternSensor_Mode_PX24ES >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ExternSensor* Arena::CreateMaybeMessage< ::ExternSensor >(Arena* arena) {
  return Arena::CreateInternal< ::ExternSensor >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
