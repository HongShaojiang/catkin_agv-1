// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ErrorMessage.proto

#include "ErrorMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class ErrorMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorMessage>
      _instance;
} _ErrorMessage_default_instance_;
namespace protobuf_ErrorMessage_2eproto {
static void InitDefaultsErrorMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ErrorMessage_default_instance_;
    new (ptr) ::ErrorMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ErrorMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ErrorMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsErrorMessage}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ErrorMessage.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ErrorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ErrorMessage, carleftfdrivererror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ErrorMessage, carrightfdrivererror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ErrorMessage, carleftbdrivererror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ErrorMessage, carrightbdrivererror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ErrorMessage, leftfdrivercomerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ErrorMessage, rightfdrivercomerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ErrorMessage, leftbdrivercomerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ErrorMessage, rightbdrivercomerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ErrorMessage, externcomdeverror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ErrorMessage, bmssyserror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ErrorMessage, obstaclestoperror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ErrorMessage, cashswitchstoperror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ErrorMessage, currentoverloaderror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ErrorMessage, xrs2015_drivernodeoff_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ErrorMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ErrorMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ErrorMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022ErrorMessage.proto\"\237\003\n\014ErrorMessage\022\033\n"
      "\023CarLeftFDriverError\030\001 \001(\010\022\034\n\024CarRightFD"
      "riverError\030\002 \001(\010\022\033\n\023CarLeftBDriverError\030"
      "\003 \001(\010\022\034\n\024CarRightBDriverError\030\004 \001(\010\022\033\n\023L"
      "eftFDriverComError\030\005 \001(\010\022\034\n\024RightFDriver"
      "ComError\030\006 \001(\010\022\033\n\023LeftBDriverComError\030\007 "
      "\001(\010\022\034\n\024RightBDriverComError\030\010 \001(\010\022\031\n\021Ext"
      "ernComDevError\030\t \001(\010\022\023\n\013BMSSysError\030\n \001("
      "\010\022\031\n\021ObstacleStopError\030\013 \001(\010\022\033\n\023CashSwit"
      "chStopError\030\014 \001(\010\022\034\n\024CurrentOverloadErro"
      "r\030\r \001(\010\022\035\n\025xrs2015_driverNodeOFF\030\016 \001(\010b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 446);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ErrorMessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ErrorMessage_2eproto

// ===================================================================

void ErrorMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorMessage::kCarLeftFDriverErrorFieldNumber;
const int ErrorMessage::kCarRightFDriverErrorFieldNumber;
const int ErrorMessage::kCarLeftBDriverErrorFieldNumber;
const int ErrorMessage::kCarRightBDriverErrorFieldNumber;
const int ErrorMessage::kLeftFDriverComErrorFieldNumber;
const int ErrorMessage::kRightFDriverComErrorFieldNumber;
const int ErrorMessage::kLeftBDriverComErrorFieldNumber;
const int ErrorMessage::kRightBDriverComErrorFieldNumber;
const int ErrorMessage::kExternComDevErrorFieldNumber;
const int ErrorMessage::kBMSSysErrorFieldNumber;
const int ErrorMessage::kObstacleStopErrorFieldNumber;
const int ErrorMessage::kCashSwitchStopErrorFieldNumber;
const int ErrorMessage::kCurrentOverloadErrorFieldNumber;
const int ErrorMessage::kXrs2015DriverNodeOFFFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorMessage::ErrorMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ErrorMessage_2eproto::scc_info_ErrorMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ErrorMessage)
}
ErrorMessage::ErrorMessage(const ErrorMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&carleftfdrivererror_, &from.carleftfdrivererror_,
    static_cast<size_t>(reinterpret_cast<char*>(&xrs2015_drivernodeoff_) -
    reinterpret_cast<char*>(&carleftfdrivererror_)) + sizeof(xrs2015_drivernodeoff_));
  // @@protoc_insertion_point(copy_constructor:ErrorMessage)
}

void ErrorMessage::SharedCtor() {
  ::memset(&carleftfdrivererror_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&xrs2015_drivernodeoff_) -
      reinterpret_cast<char*>(&carleftfdrivererror_)) + sizeof(xrs2015_drivernodeoff_));
}

ErrorMessage::~ErrorMessage() {
  // @@protoc_insertion_point(destructor:ErrorMessage)
  SharedDtor();
}

void ErrorMessage::SharedDtor() {
}

void ErrorMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ErrorMessage::descriptor() {
  ::protobuf_ErrorMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ErrorMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorMessage& ErrorMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ErrorMessage_2eproto::scc_info_ErrorMessage.base);
  return *internal_default_instance();
}


void ErrorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ErrorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&carleftfdrivererror_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&xrs2015_drivernodeoff_) -
      reinterpret_cast<char*>(&carleftfdrivererror_)) + sizeof(xrs2015_drivernodeoff_));
  _internal_metadata_.Clear();
}

bool ErrorMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ErrorMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool CarLeftFDriverError = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &carleftfdrivererror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool CarRightFDriverError = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &carrightfdrivererror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool CarLeftBDriverError = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &carleftbdrivererror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool CarRightBDriverError = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &carrightbdrivererror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool LeftFDriverComError = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &leftfdrivercomerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool RightFDriverComError = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rightfdrivercomerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool LeftBDriverComError = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &leftbdrivercomerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool RightBDriverComError = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rightbdrivercomerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ExternComDevError = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &externcomdeverror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BMSSysError = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bmssyserror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ObstacleStopError = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &obstaclestoperror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool CashSwitchStopError = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cashswitchstoperror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool CurrentOverloadError = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &currentoverloaderror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xrs2015_driverNodeOFF = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xrs2015_drivernodeoff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ErrorMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ErrorMessage)
  return false;
#undef DO_
}

void ErrorMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ErrorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool CarLeftFDriverError = 1;
  if (this->carleftfdrivererror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->carleftfdrivererror(), output);
  }

  // bool CarRightFDriverError = 2;
  if (this->carrightfdrivererror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->carrightfdrivererror(), output);
  }

  // bool CarLeftBDriverError = 3;
  if (this->carleftbdrivererror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->carleftbdrivererror(), output);
  }

  // bool CarRightBDriverError = 4;
  if (this->carrightbdrivererror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->carrightbdrivererror(), output);
  }

  // bool LeftFDriverComError = 5;
  if (this->leftfdrivercomerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->leftfdrivercomerror(), output);
  }

  // bool RightFDriverComError = 6;
  if (this->rightfdrivercomerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->rightfdrivercomerror(), output);
  }

  // bool LeftBDriverComError = 7;
  if (this->leftbdrivercomerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->leftbdrivercomerror(), output);
  }

  // bool RightBDriverComError = 8;
  if (this->rightbdrivercomerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->rightbdrivercomerror(), output);
  }

  // bool ExternComDevError = 9;
  if (this->externcomdeverror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->externcomdeverror(), output);
  }

  // bool BMSSysError = 10;
  if (this->bmssyserror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->bmssyserror(), output);
  }

  // bool ObstacleStopError = 11;
  if (this->obstaclestoperror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->obstaclestoperror(), output);
  }

  // bool CashSwitchStopError = 12;
  if (this->cashswitchstoperror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->cashswitchstoperror(), output);
  }

  // bool CurrentOverloadError = 13;
  if (this->currentoverloaderror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->currentoverloaderror(), output);
  }

  // bool xrs2015_driverNodeOFF = 14;
  if (this->xrs2015_drivernodeoff() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->xrs2015_drivernodeoff(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ErrorMessage)
}

::google::protobuf::uint8* ErrorMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ErrorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool CarLeftFDriverError = 1;
  if (this->carleftfdrivererror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->carleftfdrivererror(), target);
  }

  // bool CarRightFDriverError = 2;
  if (this->carrightfdrivererror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->carrightfdrivererror(), target);
  }

  // bool CarLeftBDriverError = 3;
  if (this->carleftbdrivererror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->carleftbdrivererror(), target);
  }

  // bool CarRightBDriverError = 4;
  if (this->carrightbdrivererror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->carrightbdrivererror(), target);
  }

  // bool LeftFDriverComError = 5;
  if (this->leftfdrivercomerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->leftfdrivercomerror(), target);
  }

  // bool RightFDriverComError = 6;
  if (this->rightfdrivercomerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->rightfdrivercomerror(), target);
  }

  // bool LeftBDriverComError = 7;
  if (this->leftbdrivercomerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->leftbdrivercomerror(), target);
  }

  // bool RightBDriverComError = 8;
  if (this->rightbdrivercomerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->rightbdrivercomerror(), target);
  }

  // bool ExternComDevError = 9;
  if (this->externcomdeverror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->externcomdeverror(), target);
  }

  // bool BMSSysError = 10;
  if (this->bmssyserror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->bmssyserror(), target);
  }

  // bool ObstacleStopError = 11;
  if (this->obstaclestoperror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->obstaclestoperror(), target);
  }

  // bool CashSwitchStopError = 12;
  if (this->cashswitchstoperror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->cashswitchstoperror(), target);
  }

  // bool CurrentOverloadError = 13;
  if (this->currentoverloaderror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->currentoverloaderror(), target);
  }

  // bool xrs2015_driverNodeOFF = 14;
  if (this->xrs2015_drivernodeoff() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->xrs2015_drivernodeoff(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ErrorMessage)
  return target;
}

size_t ErrorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ErrorMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool CarLeftFDriverError = 1;
  if (this->carleftfdrivererror() != 0) {
    total_size += 1 + 1;
  }

  // bool CarRightFDriverError = 2;
  if (this->carrightfdrivererror() != 0) {
    total_size += 1 + 1;
  }

  // bool CarLeftBDriverError = 3;
  if (this->carleftbdrivererror() != 0) {
    total_size += 1 + 1;
  }

  // bool CarRightBDriverError = 4;
  if (this->carrightbdrivererror() != 0) {
    total_size += 1 + 1;
  }

  // bool LeftFDriverComError = 5;
  if (this->leftfdrivercomerror() != 0) {
    total_size += 1 + 1;
  }

  // bool RightFDriverComError = 6;
  if (this->rightfdrivercomerror() != 0) {
    total_size += 1 + 1;
  }

  // bool LeftBDriverComError = 7;
  if (this->leftbdrivercomerror() != 0) {
    total_size += 1 + 1;
  }

  // bool RightBDriverComError = 8;
  if (this->rightbdrivercomerror() != 0) {
    total_size += 1 + 1;
  }

  // bool ExternComDevError = 9;
  if (this->externcomdeverror() != 0) {
    total_size += 1 + 1;
  }

  // bool BMSSysError = 10;
  if (this->bmssyserror() != 0) {
    total_size += 1 + 1;
  }

  // bool ObstacleStopError = 11;
  if (this->obstaclestoperror() != 0) {
    total_size += 1 + 1;
  }

  // bool CashSwitchStopError = 12;
  if (this->cashswitchstoperror() != 0) {
    total_size += 1 + 1;
  }

  // bool CurrentOverloadError = 13;
  if (this->currentoverloaderror() != 0) {
    total_size += 1 + 1;
  }

  // bool xrs2015_driverNodeOFF = 14;
  if (this->xrs2015_drivernodeoff() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ErrorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ErrorMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ErrorMessage)
    MergeFrom(*source);
  }
}

void ErrorMessage::MergeFrom(const ErrorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ErrorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.carleftfdrivererror() != 0) {
    set_carleftfdrivererror(from.carleftfdrivererror());
  }
  if (from.carrightfdrivererror() != 0) {
    set_carrightfdrivererror(from.carrightfdrivererror());
  }
  if (from.carleftbdrivererror() != 0) {
    set_carleftbdrivererror(from.carleftbdrivererror());
  }
  if (from.carrightbdrivererror() != 0) {
    set_carrightbdrivererror(from.carrightbdrivererror());
  }
  if (from.leftfdrivercomerror() != 0) {
    set_leftfdrivercomerror(from.leftfdrivercomerror());
  }
  if (from.rightfdrivercomerror() != 0) {
    set_rightfdrivercomerror(from.rightfdrivercomerror());
  }
  if (from.leftbdrivercomerror() != 0) {
    set_leftbdrivercomerror(from.leftbdrivercomerror());
  }
  if (from.rightbdrivercomerror() != 0) {
    set_rightbdrivercomerror(from.rightbdrivercomerror());
  }
  if (from.externcomdeverror() != 0) {
    set_externcomdeverror(from.externcomdeverror());
  }
  if (from.bmssyserror() != 0) {
    set_bmssyserror(from.bmssyserror());
  }
  if (from.obstaclestoperror() != 0) {
    set_obstaclestoperror(from.obstaclestoperror());
  }
  if (from.cashswitchstoperror() != 0) {
    set_cashswitchstoperror(from.cashswitchstoperror());
  }
  if (from.currentoverloaderror() != 0) {
    set_currentoverloaderror(from.currentoverloaderror());
  }
  if (from.xrs2015_drivernodeoff() != 0) {
    set_xrs2015_drivernodeoff(from.xrs2015_drivernodeoff());
  }
}

void ErrorMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorMessage::CopyFrom(const ErrorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorMessage::IsInitialized() const {
  return true;
}

void ErrorMessage::Swap(ErrorMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorMessage::InternalSwap(ErrorMessage* other) {
  using std::swap;
  swap(carleftfdrivererror_, other->carleftfdrivererror_);
  swap(carrightfdrivererror_, other->carrightfdrivererror_);
  swap(carleftbdrivererror_, other->carleftbdrivererror_);
  swap(carrightbdrivererror_, other->carrightbdrivererror_);
  swap(leftfdrivercomerror_, other->leftfdrivercomerror_);
  swap(rightfdrivercomerror_, other->rightfdrivercomerror_);
  swap(leftbdrivercomerror_, other->leftbdrivercomerror_);
  swap(rightbdrivercomerror_, other->rightbdrivercomerror_);
  swap(externcomdeverror_, other->externcomdeverror_);
  swap(bmssyserror_, other->bmssyserror_);
  swap(obstaclestoperror_, other->obstaclestoperror_);
  swap(cashswitchstoperror_, other->cashswitchstoperror_);
  swap(currentoverloaderror_, other->currentoverloaderror_);
  swap(xrs2015_drivernodeoff_, other->xrs2015_drivernodeoff_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ErrorMessage::GetMetadata() const {
  protobuf_ErrorMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ErrorMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ErrorMessage* Arena::CreateMaybeMessage< ::ErrorMessage >(Arena* arena) {
  return Arena::CreateInternal< ::ErrorMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
