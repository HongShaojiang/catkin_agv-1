// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ParamConfig.proto

#ifndef PROTOBUF_INCLUDED_ParamConfig_2eproto
#define PROTOBUF_INCLUDED_ParamConfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ExternSensorConfig.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ParamConfig_2eproto 

namespace protobuf_ParamConfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ParamConfig_2eproto
class ParamConfig;
class ParamConfigDefaultTypeInternal;
extern ParamConfigDefaultTypeInternal _ParamConfig_default_instance_;
class ParamConfig_Config_Alarm_Mode;
class ParamConfig_Config_Alarm_ModeDefaultTypeInternal;
extern ParamConfig_Config_Alarm_ModeDefaultTypeInternal _ParamConfig_Config_Alarm_Mode_default_instance_;
class ParamConfig_Config_Error_Mode;
class ParamConfig_Config_Error_ModeDefaultTypeInternal;
extern ParamConfig_Config_Error_ModeDefaultTypeInternal _ParamConfig_Config_Error_Mode_default_instance_;
class ParamConfig_Config_Mode_Driver;
class ParamConfig_Config_Mode_DriverDefaultTypeInternal;
extern ParamConfig_Config_Mode_DriverDefaultTypeInternal _ParamConfig_Config_Mode_Driver_default_instance_;
namespace google {
namespace protobuf {
template<> ::ParamConfig* Arena::CreateMaybeMessage<::ParamConfig>(Arena*);
template<> ::ParamConfig_Config_Alarm_Mode* Arena::CreateMaybeMessage<::ParamConfig_Config_Alarm_Mode>(Arena*);
template<> ::ParamConfig_Config_Error_Mode* Arena::CreateMaybeMessage<::ParamConfig_Config_Error_Mode>(Arena*);
template<> ::ParamConfig_Config_Mode_Driver* Arena::CreateMaybeMessage<::ParamConfig_Config_Mode_Driver>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class ParamConfig_Config_Mode_Driver : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ParamConfig.Config_Mode_Driver) */ {
 public:
  ParamConfig_Config_Mode_Driver();
  virtual ~ParamConfig_Config_Mode_Driver();

  ParamConfig_Config_Mode_Driver(const ParamConfig_Config_Mode_Driver& from);

  inline ParamConfig_Config_Mode_Driver& operator=(const ParamConfig_Config_Mode_Driver& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParamConfig_Config_Mode_Driver(ParamConfig_Config_Mode_Driver&& from) noexcept
    : ParamConfig_Config_Mode_Driver() {
    *this = ::std::move(from);
  }

  inline ParamConfig_Config_Mode_Driver& operator=(ParamConfig_Config_Mode_Driver&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParamConfig_Config_Mode_Driver& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParamConfig_Config_Mode_Driver* internal_default_instance() {
    return reinterpret_cast<const ParamConfig_Config_Mode_Driver*>(
               &_ParamConfig_Config_Mode_Driver_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ParamConfig_Config_Mode_Driver* other);
  friend void swap(ParamConfig_Config_Mode_Driver& a, ParamConfig_Config_Mode_Driver& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParamConfig_Config_Mode_Driver* New() const final {
    return CreateMaybeMessage<ParamConfig_Config_Mode_Driver>(NULL);
  }

  ParamConfig_Config_Mode_Driver* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParamConfig_Config_Mode_Driver>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParamConfig_Config_Mode_Driver& from);
  void MergeFrom(const ParamConfig_Config_Mode_Driver& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParamConfig_Config_Mode_Driver* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 autorun_speed = 1;
  void clear_autorun_speed();
  static const int kAutorunSpeedFieldNumber = 1;
  ::google::protobuf::int32 autorun_speed() const;
  void set_autorun_speed(::google::protobuf::int32 value);

  // int32 autorun_angel = 2;
  void clear_autorun_angel();
  static const int kAutorunAngelFieldNumber = 2;
  ::google::protobuf::int32 autorun_angel() const;
  void set_autorun_angel(::google::protobuf::int32 value);

  // int32 remote_speed = 3;
  void clear_remote_speed();
  static const int kRemoteSpeedFieldNumber = 3;
  ::google::protobuf::int32 remote_speed() const;
  void set_remote_speed(::google::protobuf::int32 value);

  // int32 remote_angel = 4;
  void clear_remote_angel();
  static const int kRemoteAngelFieldNumber = 4;
  ::google::protobuf::int32 remote_angel() const;
  void set_remote_angel(::google::protobuf::int32 value);

  // int32 remote_AcceVelocity = 5;
  void clear_remote_accevelocity();
  static const int kRemoteAcceVelocityFieldNumber = 5;
  ::google::protobuf::int32 remote_accevelocity() const;
  void set_remote_accevelocity(::google::protobuf::int32 value);

  // float ReductionRatiol = 6;
  void clear_reductionratiol();
  static const int kReductionRatiolFieldNumber = 6;
  float reductionratiol() const;
  void set_reductionratiol(float value);

  // float WheelSsize = 7;
  void clear_wheelssize();
  static const int kWheelSsizeFieldNumber = 7;
  float wheelssize() const;
  void set_wheelssize(float value);

  // float RWheelSsize = 8;
  void clear_rwheelssize();
  static const int kRWheelSsizeFieldNumber = 8;
  float rwheelssize() const;
  void set_rwheelssize(float value);

  // float LWheelSsize = 9;
  void clear_lwheelssize();
  static const int kLWheelSsizeFieldNumber = 9;
  float lwheelssize() const;
  void set_lwheelssize(float value);

  // int32 EcounterRpm = 10;
  void clear_ecounterrpm();
  static const int kEcounterRpmFieldNumber = 10;
  ::google::protobuf::int32 ecounterrpm() const;
  void set_ecounterrpm(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ParamConfig.Config_Mode_Driver)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 autorun_speed_;
  ::google::protobuf::int32 autorun_angel_;
  ::google::protobuf::int32 remote_speed_;
  ::google::protobuf::int32 remote_angel_;
  ::google::protobuf::int32 remote_accevelocity_;
  float reductionratiol_;
  float wheelssize_;
  float rwheelssize_;
  float lwheelssize_;
  ::google::protobuf::int32 ecounterrpm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ParamConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParamConfig_Config_Error_Mode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ParamConfig.Config_Error_Mode) */ {
 public:
  ParamConfig_Config_Error_Mode();
  virtual ~ParamConfig_Config_Error_Mode();

  ParamConfig_Config_Error_Mode(const ParamConfig_Config_Error_Mode& from);

  inline ParamConfig_Config_Error_Mode& operator=(const ParamConfig_Config_Error_Mode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParamConfig_Config_Error_Mode(ParamConfig_Config_Error_Mode&& from) noexcept
    : ParamConfig_Config_Error_Mode() {
    *this = ::std::move(from);
  }

  inline ParamConfig_Config_Error_Mode& operator=(ParamConfig_Config_Error_Mode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParamConfig_Config_Error_Mode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParamConfig_Config_Error_Mode* internal_default_instance() {
    return reinterpret_cast<const ParamConfig_Config_Error_Mode*>(
               &_ParamConfig_Config_Error_Mode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ParamConfig_Config_Error_Mode* other);
  friend void swap(ParamConfig_Config_Error_Mode& a, ParamConfig_Config_Error_Mode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParamConfig_Config_Error_Mode* New() const final {
    return CreateMaybeMessage<ParamConfig_Config_Error_Mode>(NULL);
  }

  ParamConfig_Config_Error_Mode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParamConfig_Config_Error_Mode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParamConfig_Config_Error_Mode& from);
  void MergeFrom(const ParamConfig_Config_Error_Mode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParamConfig_Config_Error_Mode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool CarLeftFDriverError_Ischeck = 1;
  void clear_carleftfdrivererror_ischeck();
  static const int kCarLeftFDriverErrorIscheckFieldNumber = 1;
  bool carleftfdrivererror_ischeck() const;
  void set_carleftfdrivererror_ischeck(bool value);

  // bool CarRightFDriverError_Ischeck = 2;
  void clear_carrightfdrivererror_ischeck();
  static const int kCarRightFDriverErrorIscheckFieldNumber = 2;
  bool carrightfdrivererror_ischeck() const;
  void set_carrightfdrivererror_ischeck(bool value);

  // bool CarLeftBDriverError_Ischeck = 3;
  void clear_carleftbdrivererror_ischeck();
  static const int kCarLeftBDriverErrorIscheckFieldNumber = 3;
  bool carleftbdrivererror_ischeck() const;
  void set_carleftbdrivererror_ischeck(bool value);

  // bool CarRightBDriverError_Ischeck = 4;
  void clear_carrightbdrivererror_ischeck();
  static const int kCarRightBDriverErrorIscheckFieldNumber = 4;
  bool carrightbdrivererror_ischeck() const;
  void set_carrightbdrivererror_ischeck(bool value);

  // bool LeftFDriverComError_Ischeck = 5;
  void clear_leftfdrivercomerror_ischeck();
  static const int kLeftFDriverComErrorIscheckFieldNumber = 5;
  bool leftfdrivercomerror_ischeck() const;
  void set_leftfdrivercomerror_ischeck(bool value);

  // bool RightFDriverComError_Ischeck = 6;
  void clear_rightfdrivercomerror_ischeck();
  static const int kRightFDriverComErrorIscheckFieldNumber = 6;
  bool rightfdrivercomerror_ischeck() const;
  void set_rightfdrivercomerror_ischeck(bool value);

  // bool LeftBDriverComError_Ischeck = 7;
  void clear_leftbdrivercomerror_ischeck();
  static const int kLeftBDriverComErrorIscheckFieldNumber = 7;
  bool leftbdrivercomerror_ischeck() const;
  void set_leftbdrivercomerror_ischeck(bool value);

  // bool RightBDriverComError_Ischeck = 8;
  void clear_rightbdrivercomerror_ischeck();
  static const int kRightBDriverComErrorIscheckFieldNumber = 8;
  bool rightbdrivercomerror_ischeck() const;
  void set_rightbdrivercomerror_ischeck(bool value);

  // bool ExternComDevError_Ischeck = 9;
  void clear_externcomdeverror_ischeck();
  static const int kExternComDevErrorIscheckFieldNumber = 9;
  bool externcomdeverror_ischeck() const;
  void set_externcomdeverror_ischeck(bool value);

  // bool BMSSysError_Ischeck = 10;
  void clear_bmssyserror_ischeck();
  static const int kBMSSysErrorIscheckFieldNumber = 10;
  bool bmssyserror_ischeck() const;
  void set_bmssyserror_ischeck(bool value);

  // bool ObstacleStopError_Ischeck = 11;
  void clear_obstaclestoperror_ischeck();
  static const int kObstacleStopErrorIscheckFieldNumber = 11;
  bool obstaclestoperror_ischeck() const;
  void set_obstaclestoperror_ischeck(bool value);

  // bool CashSwitchStopError_Ischeck = 12;
  void clear_cashswitchstoperror_ischeck();
  static const int kCashSwitchStopErrorIscheckFieldNumber = 12;
  bool cashswitchstoperror_ischeck() const;
  void set_cashswitchstoperror_ischeck(bool value);

  // bool CurrentOverloadError_Ischeck = 13;
  void clear_currentoverloaderror_ischeck();
  static const int kCurrentOverloadErrorIscheckFieldNumber = 13;
  bool currentoverloaderror_ischeck() const;
  void set_currentoverloaderror_ischeck(bool value);

  // bool xrs2015_driverNodeOFF_Ischeck = 14;
  void clear_xrs2015_drivernodeoff_ischeck();
  static const int kXrs2015DriverNodeOFFIscheckFieldNumber = 14;
  bool xrs2015_drivernodeoff_ischeck() const;
  void set_xrs2015_drivernodeoff_ischeck(bool value);

  // @@protoc_insertion_point(class_scope:ParamConfig.Config_Error_Mode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool carleftfdrivererror_ischeck_;
  bool carrightfdrivererror_ischeck_;
  bool carleftbdrivererror_ischeck_;
  bool carrightbdrivererror_ischeck_;
  bool leftfdrivercomerror_ischeck_;
  bool rightfdrivercomerror_ischeck_;
  bool leftbdrivercomerror_ischeck_;
  bool rightbdrivercomerror_ischeck_;
  bool externcomdeverror_ischeck_;
  bool bmssyserror_ischeck_;
  bool obstaclestoperror_ischeck_;
  bool cashswitchstoperror_ischeck_;
  bool currentoverloaderror_ischeck_;
  bool xrs2015_drivernodeoff_ischeck_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ParamConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParamConfig_Config_Alarm_Mode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ParamConfig.Config_Alarm_Mode) */ {
 public:
  ParamConfig_Config_Alarm_Mode();
  virtual ~ParamConfig_Config_Alarm_Mode();

  ParamConfig_Config_Alarm_Mode(const ParamConfig_Config_Alarm_Mode& from);

  inline ParamConfig_Config_Alarm_Mode& operator=(const ParamConfig_Config_Alarm_Mode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParamConfig_Config_Alarm_Mode(ParamConfig_Config_Alarm_Mode&& from) noexcept
    : ParamConfig_Config_Alarm_Mode() {
    *this = ::std::move(from);
  }

  inline ParamConfig_Config_Alarm_Mode& operator=(ParamConfig_Config_Alarm_Mode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParamConfig_Config_Alarm_Mode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParamConfig_Config_Alarm_Mode* internal_default_instance() {
    return reinterpret_cast<const ParamConfig_Config_Alarm_Mode*>(
               &_ParamConfig_Config_Alarm_Mode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ParamConfig_Config_Alarm_Mode* other);
  friend void swap(ParamConfig_Config_Alarm_Mode& a, ParamConfig_Config_Alarm_Mode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParamConfig_Config_Alarm_Mode* New() const final {
    return CreateMaybeMessage<ParamConfig_Config_Alarm_Mode>(NULL);
  }

  ParamConfig_Config_Alarm_Mode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParamConfig_Config_Alarm_Mode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParamConfig_Config_Alarm_Mode& from);
  void MergeFrom(const ParamConfig_Config_Alarm_Mode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParamConfig_Config_Alarm_Mode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool CtrolBoxHighTemAlarm_Ischeck = 1;
  void clear_ctrolboxhightemalarm_ischeck();
  static const int kCtrolBoxHighTemAlarmIscheckFieldNumber = 1;
  bool ctrolboxhightemalarm_ischeck() const;
  void set_ctrolboxhightemalarm_ischeck(bool value);

  // bool CtrolBoxFrozenTemAlarm_Ischeck = 2;
  void clear_ctrolboxfrozentemalarm_ischeck();
  static const int kCtrolBoxFrozenTemAlarmIscheckFieldNumber = 2;
  bool ctrolboxfrozentemalarm_ischeck() const;
  void set_ctrolboxfrozentemalarm_ischeck(bool value);

  // bool BMSModComLostAlarm_Ischeck = 3;
  void clear_bmsmodcomlostalarm_ischeck();
  static const int kBMSModComLostAlarmIscheckFieldNumber = 3;
  bool bmsmodcomlostalarm_ischeck() const;
  void set_bmsmodcomlostalarm_ischeck(bool value);

  // bool Emergency_Status_stop_Ischeck = 4;
  void clear_emergency_status_stop_ischeck();
  static const int kEmergencyStatusStopIscheckFieldNumber = 4;
  bool emergency_status_stop_ischeck() const;
  void set_emergency_status_stop_ischeck(bool value);

  // bool EcanExternSnsorNdeOFF_Ischeck = 5;
  void clear_ecanexternsnsorndeoff_ischeck();
  static const int kEcanExternSnsorNdeOFFIscheckFieldNumber = 5;
  bool ecanexternsnsorndeoff_ischeck() const;
  void set_ecanexternsnsorndeoff_ischeck(bool value);

  // bool ZmqTransNodeOFF_Ischeck = 6;
  void clear_zmqtransnodeoff_ischeck();
  static const int kZmqTransNodeOFFIscheckFieldNumber = 6;
  bool zmqtransnodeoff_ischeck() const;
  void set_zmqtransnodeoff_ischeck(bool value);

  // bool JoyTestNodeOFF_Ischeck = 7;
  void clear_joytestnodeoff_ischeck();
  static const int kJoyTestNodeOFFIscheckFieldNumber = 7;
  bool joytestnodeoff_ischeck() const;
  void set_joytestnodeoff_ischeck(bool value);

  // @@protoc_insertion_point(class_scope:ParamConfig.Config_Alarm_Mode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool ctrolboxhightemalarm_ischeck_;
  bool ctrolboxfrozentemalarm_ischeck_;
  bool bmsmodcomlostalarm_ischeck_;
  bool emergency_status_stop_ischeck_;
  bool ecanexternsnsorndeoff_ischeck_;
  bool zmqtransnodeoff_ischeck_;
  bool joytestnodeoff_ischeck_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ParamConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParamConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ParamConfig) */ {
 public:
  ParamConfig();
  virtual ~ParamConfig();

  ParamConfig(const ParamConfig& from);

  inline ParamConfig& operator=(const ParamConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParamConfig(ParamConfig&& from) noexcept
    : ParamConfig() {
    *this = ::std::move(from);
  }

  inline ParamConfig& operator=(ParamConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParamConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParamConfig* internal_default_instance() {
    return reinterpret_cast<const ParamConfig*>(
               &_ParamConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ParamConfig* other);
  friend void swap(ParamConfig& a, ParamConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParamConfig* New() const final {
    return CreateMaybeMessage<ParamConfig>(NULL);
  }

  ParamConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParamConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParamConfig& from);
  void MergeFrom(const ParamConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParamConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ParamConfig_Config_Mode_Driver Config_Mode_Driver;
  typedef ParamConfig_Config_Error_Mode Config_Error_Mode;
  typedef ParamConfig_Config_Alarm_Mode Config_Alarm_Mode;

  // accessors -------------------------------------------------------

  // .ParamConfig.Config_Mode_Driver Config_Driver_Msg = 1;
  bool has_config_driver_msg() const;
  void clear_config_driver_msg();
  static const int kConfigDriverMsgFieldNumber = 1;
  private:
  const ::ParamConfig_Config_Mode_Driver& _internal_config_driver_msg() const;
  public:
  const ::ParamConfig_Config_Mode_Driver& config_driver_msg() const;
  ::ParamConfig_Config_Mode_Driver* release_config_driver_msg();
  ::ParamConfig_Config_Mode_Driver* mutable_config_driver_msg();
  void set_allocated_config_driver_msg(::ParamConfig_Config_Mode_Driver* config_driver_msg);

  // .ParamConfig.Config_Error_Mode Config_Error_Msg = 2;
  bool has_config_error_msg() const;
  void clear_config_error_msg();
  static const int kConfigErrorMsgFieldNumber = 2;
  private:
  const ::ParamConfig_Config_Error_Mode& _internal_config_error_msg() const;
  public:
  const ::ParamConfig_Config_Error_Mode& config_error_msg() const;
  ::ParamConfig_Config_Error_Mode* release_config_error_msg();
  ::ParamConfig_Config_Error_Mode* mutable_config_error_msg();
  void set_allocated_config_error_msg(::ParamConfig_Config_Error_Mode* config_error_msg);

  // .ParamConfig.Config_Alarm_Mode Config_Alarm_Msg = 3;
  bool has_config_alarm_msg() const;
  void clear_config_alarm_msg();
  static const int kConfigAlarmMsgFieldNumber = 3;
  private:
  const ::ParamConfig_Config_Alarm_Mode& _internal_config_alarm_msg() const;
  public:
  const ::ParamConfig_Config_Alarm_Mode& config_alarm_msg() const;
  ::ParamConfig_Config_Alarm_Mode* release_config_alarm_msg();
  ::ParamConfig_Config_Alarm_Mode* mutable_config_alarm_msg();
  void set_allocated_config_alarm_msg(::ParamConfig_Config_Alarm_Mode* config_alarm_msg);

  // .ExternSensorConfig Config_extern_Msg = 4;
  bool has_config_extern_msg() const;
  void clear_config_extern_msg();
  static const int kConfigExternMsgFieldNumber = 4;
  private:
  const ::ExternSensorConfig& _internal_config_extern_msg() const;
  public:
  const ::ExternSensorConfig& config_extern_msg() const;
  ::ExternSensorConfig* release_config_extern_msg();
  ::ExternSensorConfig* mutable_config_extern_msg();
  void set_allocated_config_extern_msg(::ExternSensorConfig* config_extern_msg);

  // @@protoc_insertion_point(class_scope:ParamConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ParamConfig_Config_Mode_Driver* config_driver_msg_;
  ::ParamConfig_Config_Error_Mode* config_error_msg_;
  ::ParamConfig_Config_Alarm_Mode* config_alarm_msg_;
  ::ExternSensorConfig* config_extern_msg_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ParamConfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ParamConfig_Config_Mode_Driver

// int32 autorun_speed = 1;
inline void ParamConfig_Config_Mode_Driver::clear_autorun_speed() {
  autorun_speed_ = 0;
}
inline ::google::protobuf::int32 ParamConfig_Config_Mode_Driver::autorun_speed() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Mode_Driver.autorun_speed)
  return autorun_speed_;
}
inline void ParamConfig_Config_Mode_Driver::set_autorun_speed(::google::protobuf::int32 value) {
  
  autorun_speed_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Mode_Driver.autorun_speed)
}

// int32 autorun_angel = 2;
inline void ParamConfig_Config_Mode_Driver::clear_autorun_angel() {
  autorun_angel_ = 0;
}
inline ::google::protobuf::int32 ParamConfig_Config_Mode_Driver::autorun_angel() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Mode_Driver.autorun_angel)
  return autorun_angel_;
}
inline void ParamConfig_Config_Mode_Driver::set_autorun_angel(::google::protobuf::int32 value) {
  
  autorun_angel_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Mode_Driver.autorun_angel)
}

// int32 remote_speed = 3;
inline void ParamConfig_Config_Mode_Driver::clear_remote_speed() {
  remote_speed_ = 0;
}
inline ::google::protobuf::int32 ParamConfig_Config_Mode_Driver::remote_speed() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Mode_Driver.remote_speed)
  return remote_speed_;
}
inline void ParamConfig_Config_Mode_Driver::set_remote_speed(::google::protobuf::int32 value) {
  
  remote_speed_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Mode_Driver.remote_speed)
}

// int32 remote_angel = 4;
inline void ParamConfig_Config_Mode_Driver::clear_remote_angel() {
  remote_angel_ = 0;
}
inline ::google::protobuf::int32 ParamConfig_Config_Mode_Driver::remote_angel() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Mode_Driver.remote_angel)
  return remote_angel_;
}
inline void ParamConfig_Config_Mode_Driver::set_remote_angel(::google::protobuf::int32 value) {
  
  remote_angel_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Mode_Driver.remote_angel)
}

// int32 remote_AcceVelocity = 5;
inline void ParamConfig_Config_Mode_Driver::clear_remote_accevelocity() {
  remote_accevelocity_ = 0;
}
inline ::google::protobuf::int32 ParamConfig_Config_Mode_Driver::remote_accevelocity() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Mode_Driver.remote_AcceVelocity)
  return remote_accevelocity_;
}
inline void ParamConfig_Config_Mode_Driver::set_remote_accevelocity(::google::protobuf::int32 value) {
  
  remote_accevelocity_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Mode_Driver.remote_AcceVelocity)
}

// float ReductionRatiol = 6;
inline void ParamConfig_Config_Mode_Driver::clear_reductionratiol() {
  reductionratiol_ = 0;
}
inline float ParamConfig_Config_Mode_Driver::reductionratiol() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Mode_Driver.ReductionRatiol)
  return reductionratiol_;
}
inline void ParamConfig_Config_Mode_Driver::set_reductionratiol(float value) {
  
  reductionratiol_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Mode_Driver.ReductionRatiol)
}

// float WheelSsize = 7;
inline void ParamConfig_Config_Mode_Driver::clear_wheelssize() {
  wheelssize_ = 0;
}
inline float ParamConfig_Config_Mode_Driver::wheelssize() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Mode_Driver.WheelSsize)
  return wheelssize_;
}
inline void ParamConfig_Config_Mode_Driver::set_wheelssize(float value) {
  
  wheelssize_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Mode_Driver.WheelSsize)
}

// float RWheelSsize = 8;
inline void ParamConfig_Config_Mode_Driver::clear_rwheelssize() {
  rwheelssize_ = 0;
}
inline float ParamConfig_Config_Mode_Driver::rwheelssize() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Mode_Driver.RWheelSsize)
  return rwheelssize_;
}
inline void ParamConfig_Config_Mode_Driver::set_rwheelssize(float value) {
  
  rwheelssize_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Mode_Driver.RWheelSsize)
}

// float LWheelSsize = 9;
inline void ParamConfig_Config_Mode_Driver::clear_lwheelssize() {
  lwheelssize_ = 0;
}
inline float ParamConfig_Config_Mode_Driver::lwheelssize() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Mode_Driver.LWheelSsize)
  return lwheelssize_;
}
inline void ParamConfig_Config_Mode_Driver::set_lwheelssize(float value) {
  
  lwheelssize_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Mode_Driver.LWheelSsize)
}

// int32 EcounterRpm = 10;
inline void ParamConfig_Config_Mode_Driver::clear_ecounterrpm() {
  ecounterrpm_ = 0;
}
inline ::google::protobuf::int32 ParamConfig_Config_Mode_Driver::ecounterrpm() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Mode_Driver.EcounterRpm)
  return ecounterrpm_;
}
inline void ParamConfig_Config_Mode_Driver::set_ecounterrpm(::google::protobuf::int32 value) {
  
  ecounterrpm_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Mode_Driver.EcounterRpm)
}

// -------------------------------------------------------------------

// ParamConfig_Config_Error_Mode

// bool CarLeftFDriverError_Ischeck = 1;
inline void ParamConfig_Config_Error_Mode::clear_carleftfdrivererror_ischeck() {
  carleftfdrivererror_ischeck_ = false;
}
inline bool ParamConfig_Config_Error_Mode::carleftfdrivererror_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Error_Mode.CarLeftFDriverError_Ischeck)
  return carleftfdrivererror_ischeck_;
}
inline void ParamConfig_Config_Error_Mode::set_carleftfdrivererror_ischeck(bool value) {
  
  carleftfdrivererror_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Error_Mode.CarLeftFDriverError_Ischeck)
}

// bool CarRightFDriverError_Ischeck = 2;
inline void ParamConfig_Config_Error_Mode::clear_carrightfdrivererror_ischeck() {
  carrightfdrivererror_ischeck_ = false;
}
inline bool ParamConfig_Config_Error_Mode::carrightfdrivererror_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Error_Mode.CarRightFDriverError_Ischeck)
  return carrightfdrivererror_ischeck_;
}
inline void ParamConfig_Config_Error_Mode::set_carrightfdrivererror_ischeck(bool value) {
  
  carrightfdrivererror_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Error_Mode.CarRightFDriverError_Ischeck)
}

// bool CarLeftBDriverError_Ischeck = 3;
inline void ParamConfig_Config_Error_Mode::clear_carleftbdrivererror_ischeck() {
  carleftbdrivererror_ischeck_ = false;
}
inline bool ParamConfig_Config_Error_Mode::carleftbdrivererror_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Error_Mode.CarLeftBDriverError_Ischeck)
  return carleftbdrivererror_ischeck_;
}
inline void ParamConfig_Config_Error_Mode::set_carleftbdrivererror_ischeck(bool value) {
  
  carleftbdrivererror_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Error_Mode.CarLeftBDriverError_Ischeck)
}

// bool CarRightBDriverError_Ischeck = 4;
inline void ParamConfig_Config_Error_Mode::clear_carrightbdrivererror_ischeck() {
  carrightbdrivererror_ischeck_ = false;
}
inline bool ParamConfig_Config_Error_Mode::carrightbdrivererror_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Error_Mode.CarRightBDriverError_Ischeck)
  return carrightbdrivererror_ischeck_;
}
inline void ParamConfig_Config_Error_Mode::set_carrightbdrivererror_ischeck(bool value) {
  
  carrightbdrivererror_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Error_Mode.CarRightBDriverError_Ischeck)
}

// bool LeftFDriverComError_Ischeck = 5;
inline void ParamConfig_Config_Error_Mode::clear_leftfdrivercomerror_ischeck() {
  leftfdrivercomerror_ischeck_ = false;
}
inline bool ParamConfig_Config_Error_Mode::leftfdrivercomerror_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Error_Mode.LeftFDriverComError_Ischeck)
  return leftfdrivercomerror_ischeck_;
}
inline void ParamConfig_Config_Error_Mode::set_leftfdrivercomerror_ischeck(bool value) {
  
  leftfdrivercomerror_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Error_Mode.LeftFDriverComError_Ischeck)
}

// bool RightFDriverComError_Ischeck = 6;
inline void ParamConfig_Config_Error_Mode::clear_rightfdrivercomerror_ischeck() {
  rightfdrivercomerror_ischeck_ = false;
}
inline bool ParamConfig_Config_Error_Mode::rightfdrivercomerror_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Error_Mode.RightFDriverComError_Ischeck)
  return rightfdrivercomerror_ischeck_;
}
inline void ParamConfig_Config_Error_Mode::set_rightfdrivercomerror_ischeck(bool value) {
  
  rightfdrivercomerror_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Error_Mode.RightFDriverComError_Ischeck)
}

// bool LeftBDriverComError_Ischeck = 7;
inline void ParamConfig_Config_Error_Mode::clear_leftbdrivercomerror_ischeck() {
  leftbdrivercomerror_ischeck_ = false;
}
inline bool ParamConfig_Config_Error_Mode::leftbdrivercomerror_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Error_Mode.LeftBDriverComError_Ischeck)
  return leftbdrivercomerror_ischeck_;
}
inline void ParamConfig_Config_Error_Mode::set_leftbdrivercomerror_ischeck(bool value) {
  
  leftbdrivercomerror_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Error_Mode.LeftBDriverComError_Ischeck)
}

// bool RightBDriverComError_Ischeck = 8;
inline void ParamConfig_Config_Error_Mode::clear_rightbdrivercomerror_ischeck() {
  rightbdrivercomerror_ischeck_ = false;
}
inline bool ParamConfig_Config_Error_Mode::rightbdrivercomerror_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Error_Mode.RightBDriverComError_Ischeck)
  return rightbdrivercomerror_ischeck_;
}
inline void ParamConfig_Config_Error_Mode::set_rightbdrivercomerror_ischeck(bool value) {
  
  rightbdrivercomerror_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Error_Mode.RightBDriverComError_Ischeck)
}

// bool ExternComDevError_Ischeck = 9;
inline void ParamConfig_Config_Error_Mode::clear_externcomdeverror_ischeck() {
  externcomdeverror_ischeck_ = false;
}
inline bool ParamConfig_Config_Error_Mode::externcomdeverror_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Error_Mode.ExternComDevError_Ischeck)
  return externcomdeverror_ischeck_;
}
inline void ParamConfig_Config_Error_Mode::set_externcomdeverror_ischeck(bool value) {
  
  externcomdeverror_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Error_Mode.ExternComDevError_Ischeck)
}

// bool BMSSysError_Ischeck = 10;
inline void ParamConfig_Config_Error_Mode::clear_bmssyserror_ischeck() {
  bmssyserror_ischeck_ = false;
}
inline bool ParamConfig_Config_Error_Mode::bmssyserror_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Error_Mode.BMSSysError_Ischeck)
  return bmssyserror_ischeck_;
}
inline void ParamConfig_Config_Error_Mode::set_bmssyserror_ischeck(bool value) {
  
  bmssyserror_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Error_Mode.BMSSysError_Ischeck)
}

// bool ObstacleStopError_Ischeck = 11;
inline void ParamConfig_Config_Error_Mode::clear_obstaclestoperror_ischeck() {
  obstaclestoperror_ischeck_ = false;
}
inline bool ParamConfig_Config_Error_Mode::obstaclestoperror_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Error_Mode.ObstacleStopError_Ischeck)
  return obstaclestoperror_ischeck_;
}
inline void ParamConfig_Config_Error_Mode::set_obstaclestoperror_ischeck(bool value) {
  
  obstaclestoperror_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Error_Mode.ObstacleStopError_Ischeck)
}

// bool CashSwitchStopError_Ischeck = 12;
inline void ParamConfig_Config_Error_Mode::clear_cashswitchstoperror_ischeck() {
  cashswitchstoperror_ischeck_ = false;
}
inline bool ParamConfig_Config_Error_Mode::cashswitchstoperror_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Error_Mode.CashSwitchStopError_Ischeck)
  return cashswitchstoperror_ischeck_;
}
inline void ParamConfig_Config_Error_Mode::set_cashswitchstoperror_ischeck(bool value) {
  
  cashswitchstoperror_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Error_Mode.CashSwitchStopError_Ischeck)
}

// bool CurrentOverloadError_Ischeck = 13;
inline void ParamConfig_Config_Error_Mode::clear_currentoverloaderror_ischeck() {
  currentoverloaderror_ischeck_ = false;
}
inline bool ParamConfig_Config_Error_Mode::currentoverloaderror_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Error_Mode.CurrentOverloadError_Ischeck)
  return currentoverloaderror_ischeck_;
}
inline void ParamConfig_Config_Error_Mode::set_currentoverloaderror_ischeck(bool value) {
  
  currentoverloaderror_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Error_Mode.CurrentOverloadError_Ischeck)
}

// bool xrs2015_driverNodeOFF_Ischeck = 14;
inline void ParamConfig_Config_Error_Mode::clear_xrs2015_drivernodeoff_ischeck() {
  xrs2015_drivernodeoff_ischeck_ = false;
}
inline bool ParamConfig_Config_Error_Mode::xrs2015_drivernodeoff_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Error_Mode.xrs2015_driverNodeOFF_Ischeck)
  return xrs2015_drivernodeoff_ischeck_;
}
inline void ParamConfig_Config_Error_Mode::set_xrs2015_drivernodeoff_ischeck(bool value) {
  
  xrs2015_drivernodeoff_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Error_Mode.xrs2015_driverNodeOFF_Ischeck)
}

// -------------------------------------------------------------------

// ParamConfig_Config_Alarm_Mode

// bool CtrolBoxHighTemAlarm_Ischeck = 1;
inline void ParamConfig_Config_Alarm_Mode::clear_ctrolboxhightemalarm_ischeck() {
  ctrolboxhightemalarm_ischeck_ = false;
}
inline bool ParamConfig_Config_Alarm_Mode::ctrolboxhightemalarm_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Alarm_Mode.CtrolBoxHighTemAlarm_Ischeck)
  return ctrolboxhightemalarm_ischeck_;
}
inline void ParamConfig_Config_Alarm_Mode::set_ctrolboxhightemalarm_ischeck(bool value) {
  
  ctrolboxhightemalarm_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Alarm_Mode.CtrolBoxHighTemAlarm_Ischeck)
}

// bool CtrolBoxFrozenTemAlarm_Ischeck = 2;
inline void ParamConfig_Config_Alarm_Mode::clear_ctrolboxfrozentemalarm_ischeck() {
  ctrolboxfrozentemalarm_ischeck_ = false;
}
inline bool ParamConfig_Config_Alarm_Mode::ctrolboxfrozentemalarm_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Alarm_Mode.CtrolBoxFrozenTemAlarm_Ischeck)
  return ctrolboxfrozentemalarm_ischeck_;
}
inline void ParamConfig_Config_Alarm_Mode::set_ctrolboxfrozentemalarm_ischeck(bool value) {
  
  ctrolboxfrozentemalarm_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Alarm_Mode.CtrolBoxFrozenTemAlarm_Ischeck)
}

// bool BMSModComLostAlarm_Ischeck = 3;
inline void ParamConfig_Config_Alarm_Mode::clear_bmsmodcomlostalarm_ischeck() {
  bmsmodcomlostalarm_ischeck_ = false;
}
inline bool ParamConfig_Config_Alarm_Mode::bmsmodcomlostalarm_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Alarm_Mode.BMSModComLostAlarm_Ischeck)
  return bmsmodcomlostalarm_ischeck_;
}
inline void ParamConfig_Config_Alarm_Mode::set_bmsmodcomlostalarm_ischeck(bool value) {
  
  bmsmodcomlostalarm_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Alarm_Mode.BMSModComLostAlarm_Ischeck)
}

// bool Emergency_Status_stop_Ischeck = 4;
inline void ParamConfig_Config_Alarm_Mode::clear_emergency_status_stop_ischeck() {
  emergency_status_stop_ischeck_ = false;
}
inline bool ParamConfig_Config_Alarm_Mode::emergency_status_stop_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Alarm_Mode.Emergency_Status_stop_Ischeck)
  return emergency_status_stop_ischeck_;
}
inline void ParamConfig_Config_Alarm_Mode::set_emergency_status_stop_ischeck(bool value) {
  
  emergency_status_stop_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Alarm_Mode.Emergency_Status_stop_Ischeck)
}

// bool EcanExternSnsorNdeOFF_Ischeck = 5;
inline void ParamConfig_Config_Alarm_Mode::clear_ecanexternsnsorndeoff_ischeck() {
  ecanexternsnsorndeoff_ischeck_ = false;
}
inline bool ParamConfig_Config_Alarm_Mode::ecanexternsnsorndeoff_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Alarm_Mode.EcanExternSnsorNdeOFF_Ischeck)
  return ecanexternsnsorndeoff_ischeck_;
}
inline void ParamConfig_Config_Alarm_Mode::set_ecanexternsnsorndeoff_ischeck(bool value) {
  
  ecanexternsnsorndeoff_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Alarm_Mode.EcanExternSnsorNdeOFF_Ischeck)
}

// bool ZmqTransNodeOFF_Ischeck = 6;
inline void ParamConfig_Config_Alarm_Mode::clear_zmqtransnodeoff_ischeck() {
  zmqtransnodeoff_ischeck_ = false;
}
inline bool ParamConfig_Config_Alarm_Mode::zmqtransnodeoff_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Alarm_Mode.ZmqTransNodeOFF_Ischeck)
  return zmqtransnodeoff_ischeck_;
}
inline void ParamConfig_Config_Alarm_Mode::set_zmqtransnodeoff_ischeck(bool value) {
  
  zmqtransnodeoff_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Alarm_Mode.ZmqTransNodeOFF_Ischeck)
}

// bool JoyTestNodeOFF_Ischeck = 7;
inline void ParamConfig_Config_Alarm_Mode::clear_joytestnodeoff_ischeck() {
  joytestnodeoff_ischeck_ = false;
}
inline bool ParamConfig_Config_Alarm_Mode::joytestnodeoff_ischeck() const {
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Alarm_Mode.JoyTestNodeOFF_Ischeck)
  return joytestnodeoff_ischeck_;
}
inline void ParamConfig_Config_Alarm_Mode::set_joytestnodeoff_ischeck(bool value) {
  
  joytestnodeoff_ischeck_ = value;
  // @@protoc_insertion_point(field_set:ParamConfig.Config_Alarm_Mode.JoyTestNodeOFF_Ischeck)
}

// -------------------------------------------------------------------

// ParamConfig

// .ParamConfig.Config_Mode_Driver Config_Driver_Msg = 1;
inline bool ParamConfig::has_config_driver_msg() const {
  return this != internal_default_instance() && config_driver_msg_ != NULL;
}
inline void ParamConfig::clear_config_driver_msg() {
  if (GetArenaNoVirtual() == NULL && config_driver_msg_ != NULL) {
    delete config_driver_msg_;
  }
  config_driver_msg_ = NULL;
}
inline const ::ParamConfig_Config_Mode_Driver& ParamConfig::_internal_config_driver_msg() const {
  return *config_driver_msg_;
}
inline const ::ParamConfig_Config_Mode_Driver& ParamConfig::config_driver_msg() const {
  const ::ParamConfig_Config_Mode_Driver* p = config_driver_msg_;
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Driver_Msg)
  return p != NULL ? *p : *reinterpret_cast<const ::ParamConfig_Config_Mode_Driver*>(
      &::_ParamConfig_Config_Mode_Driver_default_instance_);
}
inline ::ParamConfig_Config_Mode_Driver* ParamConfig::release_config_driver_msg() {
  // @@protoc_insertion_point(field_release:ParamConfig.Config_Driver_Msg)
  
  ::ParamConfig_Config_Mode_Driver* temp = config_driver_msg_;
  config_driver_msg_ = NULL;
  return temp;
}
inline ::ParamConfig_Config_Mode_Driver* ParamConfig::mutable_config_driver_msg() {
  
  if (config_driver_msg_ == NULL) {
    auto* p = CreateMaybeMessage<::ParamConfig_Config_Mode_Driver>(GetArenaNoVirtual());
    config_driver_msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ParamConfig.Config_Driver_Msg)
  return config_driver_msg_;
}
inline void ParamConfig::set_allocated_config_driver_msg(::ParamConfig_Config_Mode_Driver* config_driver_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_driver_msg_;
  }
  if (config_driver_msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config_driver_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config_driver_msg, submessage_arena);
    }
    
  } else {
    
  }
  config_driver_msg_ = config_driver_msg;
  // @@protoc_insertion_point(field_set_allocated:ParamConfig.Config_Driver_Msg)
}

// .ParamConfig.Config_Error_Mode Config_Error_Msg = 2;
inline bool ParamConfig::has_config_error_msg() const {
  return this != internal_default_instance() && config_error_msg_ != NULL;
}
inline void ParamConfig::clear_config_error_msg() {
  if (GetArenaNoVirtual() == NULL && config_error_msg_ != NULL) {
    delete config_error_msg_;
  }
  config_error_msg_ = NULL;
}
inline const ::ParamConfig_Config_Error_Mode& ParamConfig::_internal_config_error_msg() const {
  return *config_error_msg_;
}
inline const ::ParamConfig_Config_Error_Mode& ParamConfig::config_error_msg() const {
  const ::ParamConfig_Config_Error_Mode* p = config_error_msg_;
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Error_Msg)
  return p != NULL ? *p : *reinterpret_cast<const ::ParamConfig_Config_Error_Mode*>(
      &::_ParamConfig_Config_Error_Mode_default_instance_);
}
inline ::ParamConfig_Config_Error_Mode* ParamConfig::release_config_error_msg() {
  // @@protoc_insertion_point(field_release:ParamConfig.Config_Error_Msg)
  
  ::ParamConfig_Config_Error_Mode* temp = config_error_msg_;
  config_error_msg_ = NULL;
  return temp;
}
inline ::ParamConfig_Config_Error_Mode* ParamConfig::mutable_config_error_msg() {
  
  if (config_error_msg_ == NULL) {
    auto* p = CreateMaybeMessage<::ParamConfig_Config_Error_Mode>(GetArenaNoVirtual());
    config_error_msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ParamConfig.Config_Error_Msg)
  return config_error_msg_;
}
inline void ParamConfig::set_allocated_config_error_msg(::ParamConfig_Config_Error_Mode* config_error_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_error_msg_;
  }
  if (config_error_msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config_error_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config_error_msg, submessage_arena);
    }
    
  } else {
    
  }
  config_error_msg_ = config_error_msg;
  // @@protoc_insertion_point(field_set_allocated:ParamConfig.Config_Error_Msg)
}

// .ParamConfig.Config_Alarm_Mode Config_Alarm_Msg = 3;
inline bool ParamConfig::has_config_alarm_msg() const {
  return this != internal_default_instance() && config_alarm_msg_ != NULL;
}
inline void ParamConfig::clear_config_alarm_msg() {
  if (GetArenaNoVirtual() == NULL && config_alarm_msg_ != NULL) {
    delete config_alarm_msg_;
  }
  config_alarm_msg_ = NULL;
}
inline const ::ParamConfig_Config_Alarm_Mode& ParamConfig::_internal_config_alarm_msg() const {
  return *config_alarm_msg_;
}
inline const ::ParamConfig_Config_Alarm_Mode& ParamConfig::config_alarm_msg() const {
  const ::ParamConfig_Config_Alarm_Mode* p = config_alarm_msg_;
  // @@protoc_insertion_point(field_get:ParamConfig.Config_Alarm_Msg)
  return p != NULL ? *p : *reinterpret_cast<const ::ParamConfig_Config_Alarm_Mode*>(
      &::_ParamConfig_Config_Alarm_Mode_default_instance_);
}
inline ::ParamConfig_Config_Alarm_Mode* ParamConfig::release_config_alarm_msg() {
  // @@protoc_insertion_point(field_release:ParamConfig.Config_Alarm_Msg)
  
  ::ParamConfig_Config_Alarm_Mode* temp = config_alarm_msg_;
  config_alarm_msg_ = NULL;
  return temp;
}
inline ::ParamConfig_Config_Alarm_Mode* ParamConfig::mutable_config_alarm_msg() {
  
  if (config_alarm_msg_ == NULL) {
    auto* p = CreateMaybeMessage<::ParamConfig_Config_Alarm_Mode>(GetArenaNoVirtual());
    config_alarm_msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ParamConfig.Config_Alarm_Msg)
  return config_alarm_msg_;
}
inline void ParamConfig::set_allocated_config_alarm_msg(::ParamConfig_Config_Alarm_Mode* config_alarm_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_alarm_msg_;
  }
  if (config_alarm_msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config_alarm_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config_alarm_msg, submessage_arena);
    }
    
  } else {
    
  }
  config_alarm_msg_ = config_alarm_msg;
  // @@protoc_insertion_point(field_set_allocated:ParamConfig.Config_Alarm_Msg)
}

// .ExternSensorConfig Config_extern_Msg = 4;
inline bool ParamConfig::has_config_extern_msg() const {
  return this != internal_default_instance() && config_extern_msg_ != NULL;
}
inline const ::ExternSensorConfig& ParamConfig::_internal_config_extern_msg() const {
  return *config_extern_msg_;
}
inline const ::ExternSensorConfig& ParamConfig::config_extern_msg() const {
  const ::ExternSensorConfig* p = config_extern_msg_;
  // @@protoc_insertion_point(field_get:ParamConfig.Config_extern_Msg)
  return p != NULL ? *p : *reinterpret_cast<const ::ExternSensorConfig*>(
      &::_ExternSensorConfig_default_instance_);
}
inline ::ExternSensorConfig* ParamConfig::release_config_extern_msg() {
  // @@protoc_insertion_point(field_release:ParamConfig.Config_extern_Msg)
  
  ::ExternSensorConfig* temp = config_extern_msg_;
  config_extern_msg_ = NULL;
  return temp;
}
inline ::ExternSensorConfig* ParamConfig::mutable_config_extern_msg() {
  
  if (config_extern_msg_ == NULL) {
    auto* p = CreateMaybeMessage<::ExternSensorConfig>(GetArenaNoVirtual());
    config_extern_msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ParamConfig.Config_extern_Msg)
  return config_extern_msg_;
}
inline void ParamConfig::set_allocated_config_extern_msg(::ExternSensorConfig* config_extern_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(config_extern_msg_);
  }
  if (config_extern_msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config_extern_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config_extern_msg, submessage_arena);
    }
    
  } else {
    
  }
  config_extern_msg_ = config_extern_msg;
  // @@protoc_insertion_point(field_set_allocated:ParamConfig.Config_extern_Msg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ParamConfig_2eproto
