// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ErrorMessage.proto

#ifndef PROTOBUF_INCLUDED_ErrorMessage_2eproto
#define PROTOBUF_INCLUDED_ErrorMessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ErrorMessage_2eproto 

namespace protobuf_ErrorMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ErrorMessage_2eproto
class ErrorMessage;
class ErrorMessageDefaultTypeInternal;
extern ErrorMessageDefaultTypeInternal _ErrorMessage_default_instance_;
namespace google {
namespace protobuf {
template<> ::ErrorMessage* Arena::CreateMaybeMessage<::ErrorMessage>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class ErrorMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ErrorMessage) */ {
 public:
  ErrorMessage();
  virtual ~ErrorMessage();

  ErrorMessage(const ErrorMessage& from);

  inline ErrorMessage& operator=(const ErrorMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ErrorMessage(ErrorMessage&& from) noexcept
    : ErrorMessage() {
    *this = ::std::move(from);
  }

  inline ErrorMessage& operator=(ErrorMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ErrorMessage* internal_default_instance() {
    return reinterpret_cast<const ErrorMessage*>(
               &_ErrorMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ErrorMessage* other);
  friend void swap(ErrorMessage& a, ErrorMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ErrorMessage* New() const final {
    return CreateMaybeMessage<ErrorMessage>(NULL);
  }

  ErrorMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ErrorMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ErrorMessage& from);
  void MergeFrom(const ErrorMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ErrorMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool CarLeftFDriverError = 1;
  void clear_carleftfdrivererror();
  static const int kCarLeftFDriverErrorFieldNumber = 1;
  bool carleftfdrivererror() const;
  void set_carleftfdrivererror(bool value);

  // bool CarRightFDriverError = 2;
  void clear_carrightfdrivererror();
  static const int kCarRightFDriverErrorFieldNumber = 2;
  bool carrightfdrivererror() const;
  void set_carrightfdrivererror(bool value);

  // bool CarLeftBDriverError = 3;
  void clear_carleftbdrivererror();
  static const int kCarLeftBDriverErrorFieldNumber = 3;
  bool carleftbdrivererror() const;
  void set_carleftbdrivererror(bool value);

  // bool CarRightBDriverError = 4;
  void clear_carrightbdrivererror();
  static const int kCarRightBDriverErrorFieldNumber = 4;
  bool carrightbdrivererror() const;
  void set_carrightbdrivererror(bool value);

  // bool LeftFDriverComError = 5;
  void clear_leftfdrivercomerror();
  static const int kLeftFDriverComErrorFieldNumber = 5;
  bool leftfdrivercomerror() const;
  void set_leftfdrivercomerror(bool value);

  // bool RightFDriverComError = 6;
  void clear_rightfdrivercomerror();
  static const int kRightFDriverComErrorFieldNumber = 6;
  bool rightfdrivercomerror() const;
  void set_rightfdrivercomerror(bool value);

  // bool LeftBDriverComError = 7;
  void clear_leftbdrivercomerror();
  static const int kLeftBDriverComErrorFieldNumber = 7;
  bool leftbdrivercomerror() const;
  void set_leftbdrivercomerror(bool value);

  // bool RightBDriverComError = 8;
  void clear_rightbdrivercomerror();
  static const int kRightBDriverComErrorFieldNumber = 8;
  bool rightbdrivercomerror() const;
  void set_rightbdrivercomerror(bool value);

  // bool ExternComDevError = 9;
  void clear_externcomdeverror();
  static const int kExternComDevErrorFieldNumber = 9;
  bool externcomdeverror() const;
  void set_externcomdeverror(bool value);

  // bool BMSSysError = 10;
  void clear_bmssyserror();
  static const int kBMSSysErrorFieldNumber = 10;
  bool bmssyserror() const;
  void set_bmssyserror(bool value);

  // bool ObstacleStopError = 11;
  void clear_obstaclestoperror();
  static const int kObstacleStopErrorFieldNumber = 11;
  bool obstaclestoperror() const;
  void set_obstaclestoperror(bool value);

  // bool CashSwitchStopError = 12;
  void clear_cashswitchstoperror();
  static const int kCashSwitchStopErrorFieldNumber = 12;
  bool cashswitchstoperror() const;
  void set_cashswitchstoperror(bool value);

  // bool CurrentOverloadError = 13;
  void clear_currentoverloaderror();
  static const int kCurrentOverloadErrorFieldNumber = 13;
  bool currentoverloaderror() const;
  void set_currentoverloaderror(bool value);

  // bool xrs2015_driverNodeOFF = 14;
  void clear_xrs2015_drivernodeoff();
  static const int kXrs2015DriverNodeOFFFieldNumber = 14;
  bool xrs2015_drivernodeoff() const;
  void set_xrs2015_drivernodeoff(bool value);

  // @@protoc_insertion_point(class_scope:ErrorMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool carleftfdrivererror_;
  bool carrightfdrivererror_;
  bool carleftbdrivererror_;
  bool carrightbdrivererror_;
  bool leftfdrivercomerror_;
  bool rightfdrivercomerror_;
  bool leftbdrivercomerror_;
  bool rightbdrivercomerror_;
  bool externcomdeverror_;
  bool bmssyserror_;
  bool obstaclestoperror_;
  bool cashswitchstoperror_;
  bool currentoverloaderror_;
  bool xrs2015_drivernodeoff_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ErrorMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ErrorMessage

// bool CarLeftFDriverError = 1;
inline void ErrorMessage::clear_carleftfdrivererror() {
  carleftfdrivererror_ = false;
}
inline bool ErrorMessage::carleftfdrivererror() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.CarLeftFDriverError)
  return carleftfdrivererror_;
}
inline void ErrorMessage::set_carleftfdrivererror(bool value) {
  
  carleftfdrivererror_ = value;
  // @@protoc_insertion_point(field_set:ErrorMessage.CarLeftFDriverError)
}

// bool CarRightFDriverError = 2;
inline void ErrorMessage::clear_carrightfdrivererror() {
  carrightfdrivererror_ = false;
}
inline bool ErrorMessage::carrightfdrivererror() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.CarRightFDriverError)
  return carrightfdrivererror_;
}
inline void ErrorMessage::set_carrightfdrivererror(bool value) {
  
  carrightfdrivererror_ = value;
  // @@protoc_insertion_point(field_set:ErrorMessage.CarRightFDriverError)
}

// bool CarLeftBDriverError = 3;
inline void ErrorMessage::clear_carleftbdrivererror() {
  carleftbdrivererror_ = false;
}
inline bool ErrorMessage::carleftbdrivererror() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.CarLeftBDriverError)
  return carleftbdrivererror_;
}
inline void ErrorMessage::set_carleftbdrivererror(bool value) {
  
  carleftbdrivererror_ = value;
  // @@protoc_insertion_point(field_set:ErrorMessage.CarLeftBDriverError)
}

// bool CarRightBDriverError = 4;
inline void ErrorMessage::clear_carrightbdrivererror() {
  carrightbdrivererror_ = false;
}
inline bool ErrorMessage::carrightbdrivererror() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.CarRightBDriverError)
  return carrightbdrivererror_;
}
inline void ErrorMessage::set_carrightbdrivererror(bool value) {
  
  carrightbdrivererror_ = value;
  // @@protoc_insertion_point(field_set:ErrorMessage.CarRightBDriverError)
}

// bool LeftFDriverComError = 5;
inline void ErrorMessage::clear_leftfdrivercomerror() {
  leftfdrivercomerror_ = false;
}
inline bool ErrorMessage::leftfdrivercomerror() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.LeftFDriverComError)
  return leftfdrivercomerror_;
}
inline void ErrorMessage::set_leftfdrivercomerror(bool value) {
  
  leftfdrivercomerror_ = value;
  // @@protoc_insertion_point(field_set:ErrorMessage.LeftFDriverComError)
}

// bool RightFDriverComError = 6;
inline void ErrorMessage::clear_rightfdrivercomerror() {
  rightfdrivercomerror_ = false;
}
inline bool ErrorMessage::rightfdrivercomerror() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.RightFDriverComError)
  return rightfdrivercomerror_;
}
inline void ErrorMessage::set_rightfdrivercomerror(bool value) {
  
  rightfdrivercomerror_ = value;
  // @@protoc_insertion_point(field_set:ErrorMessage.RightFDriverComError)
}

// bool LeftBDriverComError = 7;
inline void ErrorMessage::clear_leftbdrivercomerror() {
  leftbdrivercomerror_ = false;
}
inline bool ErrorMessage::leftbdrivercomerror() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.LeftBDriverComError)
  return leftbdrivercomerror_;
}
inline void ErrorMessage::set_leftbdrivercomerror(bool value) {
  
  leftbdrivercomerror_ = value;
  // @@protoc_insertion_point(field_set:ErrorMessage.LeftBDriverComError)
}

// bool RightBDriverComError = 8;
inline void ErrorMessage::clear_rightbdrivercomerror() {
  rightbdrivercomerror_ = false;
}
inline bool ErrorMessage::rightbdrivercomerror() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.RightBDriverComError)
  return rightbdrivercomerror_;
}
inline void ErrorMessage::set_rightbdrivercomerror(bool value) {
  
  rightbdrivercomerror_ = value;
  // @@protoc_insertion_point(field_set:ErrorMessage.RightBDriverComError)
}

// bool ExternComDevError = 9;
inline void ErrorMessage::clear_externcomdeverror() {
  externcomdeverror_ = false;
}
inline bool ErrorMessage::externcomdeverror() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.ExternComDevError)
  return externcomdeverror_;
}
inline void ErrorMessage::set_externcomdeverror(bool value) {
  
  externcomdeverror_ = value;
  // @@protoc_insertion_point(field_set:ErrorMessage.ExternComDevError)
}

// bool BMSSysError = 10;
inline void ErrorMessage::clear_bmssyserror() {
  bmssyserror_ = false;
}
inline bool ErrorMessage::bmssyserror() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.BMSSysError)
  return bmssyserror_;
}
inline void ErrorMessage::set_bmssyserror(bool value) {
  
  bmssyserror_ = value;
  // @@protoc_insertion_point(field_set:ErrorMessage.BMSSysError)
}

// bool ObstacleStopError = 11;
inline void ErrorMessage::clear_obstaclestoperror() {
  obstaclestoperror_ = false;
}
inline bool ErrorMessage::obstaclestoperror() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.ObstacleStopError)
  return obstaclestoperror_;
}
inline void ErrorMessage::set_obstaclestoperror(bool value) {
  
  obstaclestoperror_ = value;
  // @@protoc_insertion_point(field_set:ErrorMessage.ObstacleStopError)
}

// bool CashSwitchStopError = 12;
inline void ErrorMessage::clear_cashswitchstoperror() {
  cashswitchstoperror_ = false;
}
inline bool ErrorMessage::cashswitchstoperror() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.CashSwitchStopError)
  return cashswitchstoperror_;
}
inline void ErrorMessage::set_cashswitchstoperror(bool value) {
  
  cashswitchstoperror_ = value;
  // @@protoc_insertion_point(field_set:ErrorMessage.CashSwitchStopError)
}

// bool CurrentOverloadError = 13;
inline void ErrorMessage::clear_currentoverloaderror() {
  currentoverloaderror_ = false;
}
inline bool ErrorMessage::currentoverloaderror() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.CurrentOverloadError)
  return currentoverloaderror_;
}
inline void ErrorMessage::set_currentoverloaderror(bool value) {
  
  currentoverloaderror_ = value;
  // @@protoc_insertion_point(field_set:ErrorMessage.CurrentOverloadError)
}

// bool xrs2015_driverNodeOFF = 14;
inline void ErrorMessage::clear_xrs2015_drivernodeoff() {
  xrs2015_drivernodeoff_ = false;
}
inline bool ErrorMessage::xrs2015_drivernodeoff() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.xrs2015_driverNodeOFF)
  return xrs2015_drivernodeoff_;
}
inline void ErrorMessage::set_xrs2015_drivernodeoff(bool value) {
  
  xrs2015_drivernodeoff_ = value;
  // @@protoc_insertion_point(field_set:ErrorMessage.xrs2015_driverNodeOFF)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ErrorMessage_2eproto
